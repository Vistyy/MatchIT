{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/stores/expertStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/jobStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/fileStore.ts","app/layout/LoadingComponent.tsx","app/common/modals/ModalContainer.tsx","app/common/form/ValidatedTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","app/layout/NavBar.tsx","app/layout/PrivateRoute.tsx","features/errors/TestErrors.tsx","features/errors/ServerError.tsx","app/common/util/hooks.ts","features/users/RegisterSuccess.tsx","features/users/ConfirmEmail.tsx","features/errors/NotFound.tsx","features/experts/dashboard/ExpertFilters.tsx","features/experts/dashboard/ExpertListItem.tsx","features/experts/dashboard/ExpertList.tsx","features/experts/dashboard/ExpertListItemPlaceholder.tsx","features/experts/dashboard/ExpertSort.tsx","features/experts/dashboard/ExpertDashboard.tsx","features/profiles/becomeExpertForm/forms/AccountLinksForm.tsx","features/profiles/becomeExpertForm/segments/AccountLinksSegment.tsx","features/profiles/profileItemElements/AddNewItemButton.tsx","features/profiles/profileItemElements/CertificationElement.tsx","app/common/form/ValidatedDatePicker.tsx","features/profiles/becomeExpertForm/forms/CertificationForm.tsx","features/profiles/becomeExpertForm/segments/CertificationSegment.tsx","features/profiles/profileItemElements/EducationItemElement.tsx","features/profiles/becomeExpertForm/forms/EducationForm.tsx","features/profiles/becomeExpertForm/segments/EducationSegment.tsx","features/profiles/profileItemElements/EmploymentItemElement.tsx","features/profiles/becomeExpertForm/forms/EmploymentForm.tsx","features/profiles/becomeExpertForm/segments/EmploymentSegment.tsx","features/profiles/profileItemElements/ExperienceItemElement.tsx","features/profiles/becomeExpertForm/forms/ExperienceForm.tsx","features/profiles/becomeExpertForm/segments/ExperienceSegment.tsx","features/profiles/profileItemElements/PortfolioItemElement.tsx","app/common/fileUpload/add/FileAddWidgetDropzone.tsx","app/common/fileUpload/add/FileAddWidget.tsx","features/profiles/becomeExpertForm/forms/PortfolioForm.tsx","features/profiles/becomeExpertForm/segments/PortfolioSegment.tsx","features/profiles/becomeExpertForm/SkillSearchInput.tsx","features/profiles/becomeExpertForm/segments/SkillsSegment.tsx","features/profiles/profilePage/EditProfile.tsx","features/profiles/profilePage/ProfileCertification.tsx","features/profiles/profilePage/ProfileEducation.tsx","features/profiles/profilePage/ProfileEmployment.tsx","features/profiles/profilePage/ProfileExperience.tsx","features/profiles/profilePage/ProfilePortfolio.tsx","features/profiles/profilePage/ProfileContent.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","app/common/fileUpload/upload/FileUploadWidgetDropzone.tsx","app/common/fileUpload/upload/FileUploadWidget.tsx","features/profiles/profilePage/ProfileCV.tsx","features/profiles/profilePage/ProfileHeader.tsx","features/profiles/profilePage/ProfilePage.tsx","features/profiles/becomeExpertForm/BecomeExpert.tsx","app/common/fileUpload/FilePreviewModal.tsx","features/jobs/dashboard/JobFilters.tsx","app/common/profile/ProfilePopup.tsx","features/jobs/dashboard/JobListItem.tsx","features/jobs/dashboard/JobList.tsx","features/jobs/dashboard/JobListItemPlaceholder.tsx","features/jobs/dashboard/JobSort.tsx","features/jobs/dashboard/JobDashboard.tsx","features/jobs/DeleteJobButton.tsx","features/jobs/jobPage/JobAttachmentsSegment.tsx","app/common/form/ValidatedTextArea.tsx","features/jobs/jobPage/jobBid/JobBidForm.tsx","features/jobs/jobPage/jobBid/JobBidSegmentItem.tsx","features/jobs/jobPage/JobBidsSegment.tsx","features/jobs/jobPage/JobDetailsSegment.tsx","features/jobs/jobPage/JobPage.tsx","features/jobs/addJob/JobSkillSearchInput.tsx","features/jobs/addJob/RequiredJobSkills.tsx","features/jobs/addJob/AddJob.tsx","features/jobs/userJobList/UserJobListItem.tsx","features/jobs/userJobList/UserJobList.tsx","features/jobs/userJobList/UserJobsPage.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","toast","startsWith","userStore","logout","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Account","current","login","user","register","refreshToken","verifyEmail","email","resendEmailConfirm","Profiles","userName","uploadProfilePhoto","file","formData","FormData","append","deletePhoto","id","updateProfile","profile","addCV","cv","addAccountLinks","Experts","list","params","Skills","listUsed","listAll","listJobRequired","Jobs","listUser","add","job","addBid","jobId","jobBid","deleteBid","jobBidId","acceptBid","Files","uploadFile","ExpertStore","expertArray","skillRegistry","Map","loadingExperts","loadingSkills","loading","pagingParams","skillPredicate","set","skillFilter","filterDelay","setTimeout","skillNames","sortExpertsBy","resetState","clearFilter","resetSkillNames","resetSorting","resetPagination","length","resetExpertArray","changeSorting","setPagingParams","setSkillPredicate","value","includes","splice","indexOf","join","loadExperts","axiosParams","result","forEach","expert","setExpert","setPagination","runInAction","console","log","sortBy","loadAllSkills","size","clear","skill","setSkill","loadUsedSkills","getSkillNames","Array","from","values","profileStore","skills","some","profileSkill","name","title","makeAutoObservable","reaction","slice","URLSearchParams","toString","ProfileStore","editedProfile","loadingProfile","updatingProfile","loadingLinks","uploading","startProfileEditing","loadProfile","photo","setImage","undefined","uuid","resourceType","type","preview","fileStore","uploadTempPortfolioFiles","portfolioItems","all","map","item","attachments","attachment","portfolio","uploadedPortfolio","githubProfileUrl","linkedInProfileUrl","addSkill","removeSkill","filter","s","expertStore","addPortfolioItem","files","description","portfolioFiles","portfolioItem","addEmploymentItem","employedFrom","employedTo","companyName","companyPosition","jobBulletPoints","jobBulletList","employmentItem","summary","bulletPoints","employment","addExperienceItem","bulletList","experienceItem","experience","addEducationItem","facilityName","facilityLocation","fieldOfStudy","studyingFrom","studyingTo","educationItem","education","addCertification","certificateName","dateAcquired","certification","certifications","UserStore","refreshTokenTimeout","isLoggedIn","isTokenSaved","creds","setToken","startRefreshTokenTimer","modalStore","closeModal","jobStore","getUser","image","setDisplayName","displayName","stopRefreshTokenTimer","jwtToken","atob","split","timeout","Date","exp","getTime","now","clearTimeout","JobStore","loadingJob","loadingJobs","jobArray","sortJobsBy","requiredSkills","resetJob","resetJobArray","resetRequiredSkills","loadJob","deleteJob","employer","loadJobs","setJob","loadUserJobs","loadRequiredSkills","jobSkill","sort","s1","s2","addRequiredSkill","removeRequiredSkill","uploadJobAttachments","jobAttachments","addJob","jobTitle","jobDescription","isActive","addJobBid","jobBidDescription","jobBidFee","fee","deleteJobBid","jobBids","acceptJobBid","window","localStorage","getItem","appLoaded","setAppLoaded","setItem","removeItem","modal","open","openModal","content","temporaryFiles","addFiles","fileId","deleteFiles","filesToDelete","fileToDeleteId","URL","revokeObjectURL","fetch","r","blob","openFilePreviewModal","modalFile","closeFileModal","StoreContext","createContext","useStore","useContext","LoadingComponent","inverted","Dimmer","active","Loader","observer","Modal","onClose","closeIcon","Content","ValidatedTextInput","props","useField","field","meta","Form","Field","touched","label","_","omit","autoComplete","Label","basic","color","errorElementName","replace","initialValues","password","onSubmit","setErrors","catch","handleSubmit","isSubmitting","className","Header","as","textAlign","placeholder","render","style","marginBottom","Button","positive","fluid","ValidationErrors","Message","List","err","i","Item","validationSchema","Yup","required","isValid","dirty","disabled","Menu","fixed","Container","Link","to","header","src","alt","position","isExpert","paddingLeft","minWidth","width","fitted","Image","avatar","spaced","Dropdown","pointing","text","marginTop","icon","onClick","marginRight","PrivateRoute","Component","component","rest","TestErrors","baseUrl","useState","Segment","Group","widths","primary","sub","message","details","useQuery","useLocation","search","searchReducer","state","action","results","query","selection","Error","RegisterSuccess","Icon","success","ConfirmEmail","Status","setStatus","handleConfirmEmailResend","useEffect","Inline","getBody","NotFound","scrollTo","top","left","behavior","vertical","attached","display","border","margin","compact","floated","negative","minHeight","maxHeight","overflowY","count","localeCompare","Description","bio","ExpertListItemPlaceholder","Placeholder","Line","Paragraph","direction","float","options","onChange","e","loadingNext","setLoadingNext","loadingInitial","setLoadingInitial","timerRef","useRef","document","Grid","Column","Row","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","setEditMode","onReset","resetForm","matches","RegExp","fontSize","linkEditMode","setLinkEditMode","Input","AddNewButton","segmentName","lineHeight","CertificationElement","certificate","Meta","format","ValidatedDatePicker","useFormikContext","setFieldValue","setFieldTouched","disableCheckbox","setDisableCheckbox","val","calendarIcon","clearIcon","optional","Checkbox","marginLeft","toLocaleLowerCase","checked","maxDate","editCertificationMode","setEditCertificationMode","EducationItemElement","editEducationMode","setEditEducationMode","EmploymentItemElement","Extra","bulleted","bulletPoint","hoverListItem","setHoverListItem","target","setTarget","min","bulletListError","arrayHelpers","fontWeight","index","onMouseEnter","currentTarget","onMouseLeave","remove","cursor","verticalAlign","onKeyPress","preventDefault","editEmploymentMode","setEditEmploymentMode","ExperienceItemElement","editExperienceMode","setEditExperienceMode","Card","raised","flexWrap","justifyContent","padding","endsWith","maxFiles","dzStyles","borderColor","borderRadius","paddingTop","height","onDrop","useCallback","acceptedFiles","Object","assign","createObjectURL","useDropzone","accept","getRootProps","getInputProps","isDragActive","deleteMode","setDeleteMode","setFilesToDelete","entries","centered","zIndex","right","prevState","prevArray","handleDeleteMode","portfolioItemDescription","setPortfolioItemDescription","editPortfolioMode","setEditPortfolioMode","source","setRemovedSkill","useReducer","searchDispatch","timeoutRef","handleSearchChange","re","escapeRegExp","test","Search","onResultSelect","selectedSkill","find","handleResultSelect","onSearchChange","onMouseDown","minCharacters","selectFirstResult","onBlur","removedSkill","handleSaveChanges","paddingBottom","isCurrentUser","editMode","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","uploadPhoto","loader","setLoader","overflow","getCroppedCanvas","toBlob","FileUploadWidget","addCVMode","setAddCVMode","flexDirection","maxWidth","visible","setVisible","handlePhotoChange","Transition","href","link","useParams","refs","forms","formRow","setFormRow","activeStep","setActiveStep","buttonState","setButtonState","Step","GridColumn","divided","ref","bottom","prev","scrollIntoView","numPages","setNumPages","setPageNumber","onLoadSuccess","boxShadow","prevValue","ProfilePopup","Popup","hoverable","trigger","creationTime","JobListItemPlaceholder","hoverDeleteButton","setHoverDeleteButton","openConfirmModal","setOpenConfirmModal","Confirm","onCancel","onConfirm","ValidatedTextArea","resize","jobBidFormValues","rows","bidder","transform","JobBidsSegment","JobDetailsSegment","isEmployer","addJobBidMode","setAddJobBidMode","acceptedJobBid","setDisableButton","disableButton","jobFormValues","UserJobListItem","UserJobList","finally","hideProgressBar","path","exact","ExpertDashboard","JobDashboard","JobPage","ProfilePage","BecomeExpert","AddJob","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","createBrowserHistory","ReactDOM","Provider","getElementById"],"mappings":"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","file":"static/js/main.8b83d20e.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber;\r\n  pageSize;\r\n\r\n  constructor(pageNumber = 1, pageSize = 10) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Job, JobBid } from \"../models/job\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\nimport { Photo, Profile, Skill, UserFile } from \"../models/profile\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"../stores/store\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    if (process.env.NODE_ENV === \"development\") await sleep(1000);\r\n\r\n    const pagination = response.headers[\"pagination\"];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(\r\n        response.data,\r\n        JSON.parse(pagination)\r\n      );\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config, headers } = error.response!;\r\n    switch (status) {\r\n      case 400:\r\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\r\n          history.push(\"/not-found\");\r\n        }\r\n        if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modalStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n          throw modalStateErrors.flat();\r\n        } else {\r\n          toast.error(data);\r\n        }\r\n        break;\r\n      case 401:\r\n        if (\r\n          status === 401 &&\r\n          headers[\"www-authenticate\"]?.startsWith('Bearer error=\"invalid_token')\r\n        ) {\r\n          store.userStore.logout();\r\n          toast.error(\"Session expired - please login again\");\r\n        }\r\n        break;\r\n      case 404:\r\n        history.push(\"/not-found\");\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push(\"/server-error\");\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>(\"/account\"),\r\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\r\n  register: (user: UserFormValues) =>\r\n    requests.post<User>(\"/account/register\", user),\r\n  refreshToken: () => requests.post<User>(\"/account/refreshToken\", {}),\r\n  verifyEmail: (token: string, email: string) =>\r\n    requests.post<void>(\r\n      `/account/verifyEmail?token=${token}&email=${email}`,\r\n      {}\r\n    ),\r\n  resendEmailConfirm: (email: string) =>\r\n    requests.get(`/account/resendEmailConfirmationLink?email=${email}`),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (userName: string) => requests.get<Profile>(`/profiles/${userName}`),\r\n  uploadProfilePhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios.post<Photo>(\"photos\", formData, {\r\n      headers: { \"Content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  updateProfile: (profile: Partial<Profile>) =>\r\n    requests.put(`/profiles`, profile),\r\n  addCV: (cv: UserFile) => requests.put(\"/profiles/cv\", cv),\r\n  addAccountLinks: (profile: Partial<Profile>) =>\r\n    requests.put(\"/profiles/accountLinks\", profile),\r\n};\r\n\r\nconst Files = {\r\n  uploadFile: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios.post<UserFile>(\"files\", formData, {\r\n      headers: { \"Content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n};\r\n\r\nconst Experts = {\r\n  list: (params: URLSearchParams) =>\r\n    axios\r\n      .get<PaginatedResult<Profile[]>>(\"/experts\", { params })\r\n      .then(responseBody),\r\n};\r\n\r\nconst Skills = {\r\n  listUsed: (params: URLSearchParams) =>\r\n    axios.get<Skill[]>(\"/skills\", { params }).then(responseBody),\r\n  listAll: () => requests.get<Skill[]>(\"/skills/all\"),\r\n  listJobRequired: (params: URLSearchParams) =>\r\n    axios.get<Skill[]>(\"/skills/job-required\", { params }).then(responseBody),\r\n};\r\n\r\nconst Jobs = {\r\n  get: (id: string) => requests.get<Job>(`/jobs/${id}`),\r\n  list: (params: URLSearchParams) =>\r\n    axios.get<PaginatedResult<Job[]>>(\"/jobs\", { params }).then(responseBody),\r\n  listUser: (userName: string, params: URLSearchParams) =>\r\n    axios\r\n      .get<PaginatedResult<Job[]>>(`/jobs/user/${userName}`, { params })\r\n      .then(responseBody),\r\n  add: (job: Partial<Job>) => requests.post(\"/jobs\", job),\r\n  delete: (id: string) => requests.del(`/jobs/${id}`),\r\n  addBid: (jobId: string, jobBid: Partial<JobBid>) =>\r\n    requests.post(`/jobs/${jobId}/bid`, jobBid),\r\n  deleteBid: (jobBidId: string) => requests.del(`/jobs/bids/${jobBidId}`),\r\n  acceptBid: (jobId: string, jobBidId: string) =>\r\n    requests.del(`/jobs/${jobId}/${jobBidId}`,),\r\n};\r\n\r\nconst agent = {\r\n  Account,\r\n  Profiles,\r\n  Experts,\r\n  Skills,\r\n  Jobs,\r\n  Files,\r\n};\r\n\r\nexport default agent;\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\nimport { Profile, Skill } from \"../models/profile\";\r\nimport { SkillSearchItem } from \"../models/search\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ExpertStore {\r\n  expertArray: Profile[] = [];\r\n  skillRegistry = new Map<number, Skill>();\r\n  loadingExperts = false;\r\n  loadingSkills = false;\r\n  loading = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  skillPredicate = new Map().set(\"skill\", \"all\");\r\n  skillFilter: string[] = [];\r\n  filterDelay: NodeJS.Timeout = setTimeout(() => {}, 0);\r\n  skillNames: SkillSearchItem[] = [];\r\n  sortExpertsBy: string = \"displayNameAsc\";\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.skillFilter.slice(),\r\n      () => {\r\n        this.filterDelay = setTimeout(() => {\r\n          this.pagingParams = new PagingParams();\r\n          this.resetExpertArray();\r\n          this.loadUsedSkills();\r\n        }, 500);\r\n      }\r\n    );\r\n\r\n    reaction(\r\n      () => this.sortExpertsBy,\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        runInAction(() => (this.expertArray.length = 0));\r\n        this.loadUsedSkills();\r\n      }\r\n    );\r\n  }\r\n\r\n  resetState = () => {\r\n    this.clearFilter();\r\n    this.resetSkillNames();\r\n    this.resetSorting();\r\n    this.resetPagination();\r\n  };\r\n\r\n  clearFilter = () => {\r\n    this.skillPredicate.set(\"skill\", \"all\");\r\n    this.skillFilter.length = 0;\r\n  };\r\n\r\n  resetSkillNames = () => {\r\n    this.skillNames.length = 0;\r\n  };\r\n\r\n  resetExpertArray = () => {\r\n    this.expertArray.length = 0;\r\n  };\r\n  resetSorting = () => this.changeSorting(\"displayNameAsc\");\r\n  resetPagination = () => {\r\n    this.pagination = null;\r\n    this.pagingParams = new PagingParams();\r\n  };\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  };\r\n\r\n  setSkillPredicate = (value: string) => {\r\n    this.skillFilter.includes(value)\r\n      ? this.skillFilter.splice(this.skillFilter.indexOf(value), 1)\r\n      : this.skillFilter.push(value);\r\n    this.skillFilter.length > 0\r\n      ? this.skillPredicate.set(\"skill\", this.skillFilter.join(\",\"))\r\n      : this.skillPredicate.set(\"skill\", \"all\");\r\n  };\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\r\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\r\n    this.skillPredicate.forEach((value, key) => {\r\n      params.append(key, value);\r\n    });\r\n\r\n    params.append(\"sortBy\", this.sortExpertsBy);\r\n\r\n    return params;\r\n  }\r\n\r\n  loadExperts = async () => {\r\n    this.loadingExperts = true;\r\n    try {\r\n      const result = await agent.Experts.list(this.axiosParams);\r\n      result.data.forEach((expert) => {\r\n        this.setExpert(expert);\r\n      });\r\n      this.setPagination(result.pagination);\r\n      runInAction(() => (this.loadingExperts = false));\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingExperts = false));\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  private setExpert = (expert: Profile) => {\r\n    this.expertArray.push(expert);\r\n  };\r\n\r\n  changeSorting = (sortBy: string) => {\r\n    this.sortExpertsBy = sortBy;\r\n  };\r\n\r\n  loadAllSkills = async () => {\r\n    this.loadingSkills = true;\r\n    try {\r\n      const result = await agent.Skills.listAll();\r\n      if (this.skillRegistry.size > 0)\r\n        runInAction(() => this.skillRegistry.clear());\r\n      result.forEach((skill) => this.setSkill(skill));\r\n      runInAction(() => (this.loadingSkills = false));\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingSkills = false));\r\n    }\r\n  };\r\n\r\n  loadUsedSkills = async () => {\r\n    this.loadingSkills = true;\r\n    try {\r\n      const result = await agent.Skills.listUsed(this.axiosParams);\r\n      if (this.skillRegistry.size > 0)\r\n        runInAction(() => this.skillRegistry.clear());\r\n      result.forEach((skill) => this.setSkill(skill));\r\n      runInAction(() => (this.loadingSkills = false));\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingSkills = false));\r\n    }\r\n  };\r\n\r\n  private setSkill = (skill: Skill) => {\r\n    this.skillRegistry.set(skill.id, skill);\r\n  };\r\n\r\n  getSkillNames = () => {\r\n    this.skillNames.length = 0;\r\n    const skills = Array.from(this.skillRegistry.values());\r\n    skills.forEach((skill) => {\r\n      if (\r\n        store.profileStore.profile &&\r\n        !store.profileStore.profile.skills.some(\r\n          (profileSkill) => skill.name === profileSkill.name\r\n        )\r\n      )\r\n        this.skillNames.push({ title: skill.name });\r\n    });\r\n    return this.skillNames;\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport {\r\n  AccountLinksFormValues,\r\n  Certification,\r\n  CertificationFormValues,\r\n  EducationFormValues,\r\n  EducationItem,\r\n  EmploymentFormValues,\r\n  EmploymentItem,\r\n  ExperienceFormValues,\r\n  ExperienceItem,\r\n  Photo,\r\n  PortfolioItem,\r\n  Profile,\r\n  Skill,\r\n  UserFile,\r\n} from \"../models/profile\";\r\nimport { SkillSearchItem } from \"../models/search\";\r\nimport { store } from \"./store\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  editedProfile: Profile | null = null;\r\n  loadingProfile = false;\r\n  updatingProfile = false;\r\n  loadingLinks = false;\r\n  uploading = false;\r\n  loading = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user?.userName === this.profile?.userName) {\r\n      return store.userStore.user?.userName === this.profile?.userName;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  resetState = () => {\r\n    this.profile = null;\r\n    this.editedProfile = null;\r\n  };\r\n\r\n  startProfileEditing = () => {\r\n    this.editedProfile = {...this.profile!};\r\n  }\r\n\r\n  loadProfile = async (userName: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(userName);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingProfile = false));\r\n    }\r\n  };\r\n\r\n  uploadProfilePhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadProfilePhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile && store.userStore.user) {\r\n          store.userStore.setImage(photo);\r\n          this.profile.photo = photo;\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.uploading = false));\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photo = undefined;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  addCV = async (file: any) => {\r\n    this.uploading = true;\r\n    try {\r\n      const cv: UserFile = {\r\n        id: uuid(),\r\n        resourceType: file.type,\r\n        url: file.preview,\r\n      };\r\n      const response = await store.fileStore.uploadFile(cv);\r\n      cv.id = response!.id;\r\n      cv.url = response!.url;\r\n      await agent.Profiles.addCV(cv);\r\n      runInAction(() => {\r\n        this.profile!.cv = cv;\r\n        this.uploading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.uploading = false));\r\n    }\r\n  };\r\n\r\n  uploadTempPortfolioFiles = async (portfolioItems: PortfolioItem[]) => {\r\n    this.loading = true;\r\n    try {\r\n      await Promise.all(\r\n        portfolioItems.map(async (item) => {\r\n          await Promise.all(\r\n            item.attachments.map(async (attachment) => {\r\n              if (attachment.url.startsWith(\"blob:\")) {\r\n                const response = await store.fileStore.uploadFile(attachment);\r\n                attachment = response!;\r\n              }\r\n            })\r\n          );\r\n        })\r\n      );\r\n      runInAction(() => (this.loading = false));\r\n      return portfolioItems;\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateProfile = async (editedProfile: Partial<Profile>) => {\r\n    this.updatingProfile = true;\r\n    try {\r\n      const uploadedPortfolio = await this.uploadTempPortfolioFiles(\r\n        editedProfile.portfolio!\r\n      );\r\n      runInAction(() => (editedProfile.portfolio = uploadedPortfolio));\r\n      await agent.Profiles.updateProfile(editedProfile);\r\n      runInAction(() => {\r\n        this.profile = { ...this.profile, ...(editedProfile as Profile) };\r\n        this.updatingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.updatingProfile = false));\r\n    }\r\n  };\r\n\r\n  addAccountLinks = async ({\r\n    githubProfileUrl,\r\n    linkedInProfileUrl,\r\n  }: AccountLinksFormValues) => {\r\n    this.loadingLinks = true;\r\n    try {\r\n      const profile: Partial<Profile> = {\r\n        githubProfileUrl,\r\n        linkedInProfileUrl,\r\n      };\r\n      await agent.Profiles.addAccountLinks(profile);\r\n      runInAction(() => {\r\n        this.profile = { ...this.profile, ...(profile as Profile) };\r\n        this.loadingLinks = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  addSkill = (skill: Skill) => {\r\n    if (this.editedProfile) {\r\n      this.editedProfile.skills.push(skill);\r\n    }\r\n  };\r\n\r\n  removeSkill = (skill: Skill) => {\r\n    if (this.editedProfile) {\r\n      this.editedProfile.skills = this.editedProfile.skills.filter((s) => s !== skill);\r\n    }\r\n    store.expertStore.skillNames.push({\r\n      title: skill.name,\r\n    } as SkillSearchItem);\r\n  };\r\n\r\n  addPortfolioItem = (files: Map<string, any>, description: string) => {\r\n    const portfolioFiles: UserFile[] = [];\r\n    files.forEach((file) => portfolioFiles.push(file));\r\n    const portfolioItem: PortfolioItem = {\r\n      id: uuid(),\r\n      attachments: portfolioFiles,\r\n      description: description,\r\n    };\r\n    this.editedProfile?.portfolio.push({ ...portfolioItem });\r\n  };\r\n\r\n  addEmploymentItem = ({\r\n    employedFrom,\r\n    employedTo,\r\n    companyName,\r\n    companyPosition,\r\n    jobBulletList: jobBulletPoints,\r\n  }: EmploymentFormValues) => {\r\n    const employmentItem: EmploymentItem = {\r\n      id: uuid(),\r\n      employedFrom,\r\n      employedTo,\r\n      description: {\r\n        id: uuid(),\r\n        title: companyName,\r\n        summary: companyPosition,\r\n        bulletPoints: jobBulletPoints,\r\n      },\r\n    };\r\n    this.editedProfile?.employment.push(employmentItem);\r\n  };\r\n\r\n  addExperienceItem = ({\r\n    title,\r\n    summary,\r\n    bulletList: bulletPoints,\r\n  }: ExperienceFormValues) => {\r\n    const experienceItem: ExperienceItem = {\r\n      id: uuid(),\r\n      description: { id: uuid(), title, summary, bulletPoints: bulletPoints },\r\n    };\r\n    this.editedProfile?.experience.push(experienceItem);\r\n  };\r\n\r\n  addEducationItem = ({\r\n    facilityName,\r\n    facilityLocation,\r\n    fieldOfStudy,\r\n    studyingFrom,\r\n    studyingTo,\r\n  }: EducationFormValues) => {\r\n    const educationItem: EducationItem = {\r\n      id: uuid(),\r\n      facilityName,\r\n      facilityLocation,\r\n      fieldOfStudy,\r\n      studyingFrom,\r\n      studyingTo,\r\n    };\r\n    this.editedProfile?.education.push(educationItem);\r\n  };\r\n\r\n  addCertification = ({\r\n    certificateName,\r\n    dateAcquired,\r\n  }: CertificationFormValues) => {\r\n    const certification: Certification = {\r\n      id: uuid(),\r\n      name: certificateName,\r\n      dateAcquired,\r\n    };\r\n    this.editedProfile?.certifications.push(certification);\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo } from \"../models/profile\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n  refreshTokenTimeout: any;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  isLoggedIn = () => {\r\n    if (store.commonStore.token && !store.commonStore.isTokenSaved()) {\r\n      this.logout();\r\n      toast.error(\"Session expired - please login again\");\r\n    }\r\n    return !!store.commonStore.isTokenSaved();\r\n  };\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      this.startRefreshTokenTimer(user);\r\n      runInAction(() => (this.user = user));\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    this.user = null;\r\n    store.profileStore.profile = null;\r\n    store.expertStore.resetState();\r\n    store.profileStore.resetState();\r\n    store.fileStore.resetState();\r\n    store.jobStore.resetState();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      this.startRefreshTokenTimer(user);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      await agent.Account.register(creds);\r\n      history.push(`/account/registerSuccess?email=${creds.email}`);\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  setImage = (image: Photo) => {\r\n    if (this.user) this.user.photo = image;\r\n  };\r\n\r\n  setDisplayName = (name: string) => {\r\n    if (this.user) this.user.displayName = name;\r\n  };\r\n\r\n  refreshToken = async () => {\r\n    this.stopRefreshTokenTimer();\r\n    try {\r\n      const user = await agent.Account.refreshToken();\r\n      runInAction(() => (this.user = user));\r\n      store.commonStore.setToken(user.token);\r\n      this.startRefreshTokenTimer(user);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  private startRefreshTokenTimer(user: User) {\r\n    const jwtToken = JSON.parse(atob(user.token.split(\".\")[1]));\r\n    const expires = new Date(jwtToken.exp * 1000);\r\n    const timeout = expires.getTime() - Date.now() - 60 * 1000;\r\n    this.refreshTokenTimeout = setTimeout(this.refreshToken, timeout);\r\n  }\r\n\r\n  private stopRefreshTokenTimer() {\r\n    clearTimeout(this.refreshTokenTimeout);\r\n  }\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Job, JobBid, JobBidFormValues, JobFormValues } from \"../models/job\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\nimport { Skill, UserFile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { SkillSearchItem } from \"../models/search\";\r\nimport { history } from \"../..\";\r\n\r\nexport default class JobStore {\r\n  loadingSkills = false;\r\n  loadingJob = false;\r\n  loadingJobs = false;\r\n  loading = false;\r\n  uploading = false;\r\n  job: Job | null = null;\r\n  jobArray: Job[] = [];\r\n  pagingParams = new PagingParams();\r\n  pagination: Pagination | null = null;\r\n  skillRegistry = new Map<number, Skill>();\r\n  skillPredicate = new Map().set(\"skill\", \"all\");\r\n  skillFilter: string[] = [];\r\n  filterDelay: any;\r\n  sortJobsBy: string = \"dateNewest\";\r\n  skillNames: SkillSearchItem[] = [];\r\n  requiredSkills: Skill[] = [];\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.skillFilter.slice(),\r\n      () => {\r\n        this.filterDelay = setTimeout(() => {\r\n          this.pagingParams = new PagingParams();\r\n          this.resetJobArray();\r\n          this.loadRequiredSkills();\r\n        }, 500);\r\n      }\r\n    );\r\n\r\n    reaction(\r\n      () => this.sortJobsBy,\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        runInAction(() => (this.jobArray.length = 0));\r\n        this.loadRequiredSkills();\r\n      }\r\n    );\r\n  }\r\n\r\n  get isEmployer() {\r\n    return (\r\n      store.userStore.isLoggedIn() &&\r\n      this.job?.employer.userName === store.userStore.user?.userName\r\n    );\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  setSkillPredicate = (value: string) => {\r\n    this.skillFilter.includes(value)\r\n      ? this.skillFilter.splice(this.skillFilter.indexOf(value), 1)\r\n      : this.skillFilter.push(value);\r\n    this.skillFilter.length > 0\r\n      ? this.skillPredicate.set(\"skill\", this.skillFilter.join(\",\"))\r\n      : this.skillPredicate.set(\"skill\", \"all\");\r\n  };\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\r\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\r\n    this.skillPredicate.forEach((value, key) => {\r\n      params.append(key, value);\r\n    });\r\n    params.append(\"sortBy\", this.sortJobsBy);\r\n\r\n    return params;\r\n  }\r\n\r\n  resetState = () => {\r\n    this.clearFilter();\r\n    this.resetJob();\r\n    this.resetJobArray();\r\n    this.resetSorting();\r\n    this.resetPagination();\r\n  };\r\n\r\n  clearFilter = () => {\r\n    this.skillFilter.length = 0;\r\n    this.skillPredicate.set(\"skill\", \"all\");\r\n  };\r\n\r\n  resetJob = () => (this.job = null);\r\n\r\n  resetRequiredSkills = () => (this.requiredSkills.length = 0);\r\n  resetJobArray = () => (this.jobArray.length = 0);\r\n  resetSorting = () => this.changeSorting(\"dateNewest\");\r\n  resetPagination = () => {\r\n    this.pagination = null;\r\n    this.pagingParams = new PagingParams();\r\n  };\r\n\r\n  loadJob = async (id: string) => {\r\n    this.loadingJob = true;\r\n    try {\r\n      const job = await agent.Jobs.get(id);\r\n      runInAction(() => {\r\n        this.job = job;\r\n        this.loadingJob = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingJob = false));\r\n    }\r\n  };\r\n\r\n  deleteJob = async (id: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Jobs.delete(id);\r\n      runInAction(() => {\r\n        this.jobArray = this.jobArray.filter((job) => job.id !== id);\r\n        this.loading = false;\r\n        history.push(`/jobs/user/${this.job?.employer.userName}`);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  loadJobs = async () => {\r\n    this.loadingJobs = true;\r\n    try {\r\n      const result = await agent.Jobs.list(this.axiosParams);\r\n      result.data.forEach((job) => {\r\n        this.setJob(job);\r\n      });\r\n      this.setPagination(result.pagination);\r\n      runInAction(() => (this.loadingJobs = false));\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingJobs = false));\r\n    }\r\n  };\r\n\r\n  loadUserJobs = async () => {\r\n    this.loadingJobs = true;\r\n    if (store.userStore.user) {\r\n      try {\r\n        const result = await agent.Jobs.listUser(\r\n          store.userStore.user.userName,\r\n          this.axiosParams\r\n        );\r\n        result.data.forEach((job) => {\r\n          this.setJob(job);\r\n        });\r\n        this.setPagination(result.pagination);\r\n        runInAction(() => (this.loadingJobs = false));\r\n      } catch (error) {\r\n        console.log(error);\r\n        runInAction(() => (this.loadingJobs = false));\r\n      }\r\n    }\r\n  };\r\n\r\n  private setJob = (job: Job) => {\r\n    this.jobArray.push(job);\r\n  };\r\n\r\n  changeSorting = (sortBy: string) => {\r\n    this.sortJobsBy = sortBy;\r\n  };\r\n\r\n  loadRequiredSkills = async () => {\r\n    this.loadingSkills = true;\r\n    try {\r\n      const result = await agent.Skills.listJobRequired(this.axiosParams);\r\n      if (this.skillRegistry.size > 0)\r\n        runInAction(() => this.skillRegistry.clear());\r\n      result.forEach((skill) => this.setSkill(skill));\r\n      runInAction(() => (this.loadingSkills = false));\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingSkills = false));\r\n    }\r\n  };\r\n\r\n  private setSkill = (skill: Skill) => {\r\n    this.skillRegistry.set(skill.id, skill);\r\n  };\r\n\r\n  loadAllSkills = async () => {\r\n    this.loadingSkills = true;\r\n    try {\r\n      const result = await agent.Skills.listAll();\r\n      if (this.skillRegistry.size > 0)\r\n        runInAction(() => this.skillRegistry.clear());\r\n      result.forEach((skill) => this.setSkill(skill));\r\n      runInAction(() => (this.loadingSkills = false));\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingSkills = false));\r\n    }\r\n  };\r\n\r\n  getSkillNames = () => {\r\n    this.skillNames.length = 0;\r\n    const skills = Array.from(this.skillRegistry.values());\r\n    skills.forEach((skill) => {\r\n      if (\r\n        this.requiredSkills &&\r\n        !this.requiredSkills.some((jobSkill) => skill.name === jobSkill.name)\r\n      )\r\n        this.skillNames.push({ title: skill.name });\r\n    });\r\n    this.skillNames.sort((s1, s2) => {\r\n      return s1.title >= s2.title ? 1 : -1;\r\n    });\r\n    return this.skillNames;\r\n  };\r\n\r\n  addRequiredSkill = (skill: Skill) => {\r\n    if (this.requiredSkills) {\r\n      this.requiredSkills.push(skill);\r\n    }\r\n  };\r\n\r\n  removeRequiredSkill = (skill: Skill) => {\r\n    if (this.requiredSkills) {\r\n      this.requiredSkills = this.requiredSkills.filter((s) => s !== skill);\r\n    }\r\n    this.skillNames.push({\r\n      title: skill.name,\r\n    } as SkillSearchItem);\r\n  };\r\n\r\n  uploadJobAttachments = async (jobAttachments: UserFile[]) => {\r\n    this.uploading = true;\r\n    try {\r\n      await Promise.all(\r\n        jobAttachments.map(async (attachment) => {\r\n          if (attachment.url.startsWith(\"blob:\")) {\r\n            const response = await store.fileStore.uploadFile(attachment);\r\n            attachment = response!;\r\n          }\r\n        })\r\n      );\r\n      runInAction(() => (this.uploading = false));\r\n      return jobAttachments;\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.uploading = false));\r\n    }\r\n  };\r\n\r\n  addJob = async (\r\n    { jobTitle, jobDescription }: JobFormValues,\r\n    files: Map<string, UserFile>\r\n  ) => {\r\n    this.loading = true;\r\n    try {\r\n      const jobAttachments = await this.uploadJobAttachments(\r\n        Array.from(files.values())\r\n      );\r\n      const job: Partial<Job> = {\r\n        id: uuid(),\r\n        title: jobTitle,\r\n        description: jobDescription,\r\n        attachments: jobAttachments,\r\n        isActive: true,\r\n        requiredSkills: this.requiredSkills,\r\n      };\r\n      await agent.Jobs.add(job);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n        history.push(`/jobs/${job.id}`);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  addJobBid = async (\r\n    { jobBidDescription, jobBidFee }: JobBidFormValues,\r\n    cv: UserFile\r\n  ) => {\r\n    this.loading = true;\r\n    try {\r\n      const response = await store.fileStore.uploadFile(cv);\r\n      cv = response!;\r\n      const jobBid: Partial<JobBid> = {\r\n        description: jobBidDescription,\r\n        fee: jobBidFee,\r\n        cv: cv,\r\n      };\r\n      await agent.Jobs.addBid(this.job!.id, jobBid);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n        history.push(`/jobs/${this.job!.id}`);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  deleteJobBid = async (jobBidId: string) => {\r\n    this.loading = true;\r\n    try {\r\n      runInAction(() => {\r\n        this.job!.jobBids = this.job!.jobBids.filter(\r\n          (jobBid) => jobBid.id !== jobBidId\r\n        );\r\n        this.loading = false;\r\n      });\r\n      await agent.Jobs.deleteBid(jobBidId);\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  acceptJobBid = async (jobBidId: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Jobs.acceptBid(this.job!.id, jobBidId);\r\n      runInAction(() => (this.loading = false));\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ExpertStore from \"./expertStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\nimport FileStore from \"./fileStore\";\r\nimport JobStore from \"./jobStore\";\r\n\r\ninterface Store {\r\n  commonStore: CommonStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  userStore: UserStore;\r\n  expertStore: ExpertStore;\r\n  fileStore: FileStore;\r\n  jobStore: JobStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  commonStore: new CommonStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  userStore: new UserStore(),\r\n  expertStore: new ExpertStore(),\r\n  fileStore: new FileStore(),\r\n  jobStore: new JobStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n  return useContext(StoreContext);\r\n}\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = window.localStorage.getItem(\"jwt\");\r\n  appLoaded = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.token,\r\n      (token) => {\r\n        if (token) {\r\n          window.localStorage.setItem(\"jwt\", token);\r\n        } else {\r\n          window.localStorage.removeItem(\"jwt\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  isTokenSaved = () => {\r\n    return !!window.localStorage.getItem(\"jwt\");\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  };\r\n\r\n  setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\nexport interface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n  size?: \"mini\" | \"tiny\" | \"small\" | \"large\" | \"fullscreen\" | undefined;\r\n}\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null,\r\n    size: undefined,\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (\r\n    content: JSX.Element,\r\n    size:\r\n      | \"mini\"\r\n      | \"tiny\"\r\n      | \"small\"\r\n      | \"large\"\r\n      | \"fullscreen\"\r\n      | undefined = \"mini\"\r\n  ) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n    this.modal.size = size;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport agent from \"../api/agent\";\r\nimport { UserFile } from \"../models/profile\";\r\nimport { Modal } from \"./modalStore\";\r\n\r\ninterface FileModal extends Modal {\r\n  file: UserFile | undefined;\r\n}\r\n\r\nexport default class FileStore {\r\n  modal: FileModal = {\r\n    open: false,\r\n    body: null,\r\n    size: undefined,\r\n    file: undefined,\r\n  };\r\n  temporaryFiles = new Map<string, UserFile>();\r\n  uploading = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  resetState = () => {\r\n    this.temporaryFiles.clear();\r\n  };\r\n\r\n  addFiles = (files: any[]) => {\r\n    files.forEach((file) => {\r\n      const fileId = uuid();\r\n      this.temporaryFiles.set(fileId, {\r\n        id: fileId,\r\n        url: file.preview,\r\n        resourceType: file.type,\r\n      });\r\n    });\r\n  };\r\n\r\n  deleteFiles = (filesToDelete: string[]) => {\r\n    filesToDelete.forEach((fileToDeleteId) => {\r\n      URL.revokeObjectURL(this.temporaryFiles.get(fileToDeleteId)!.url);\r\n      this.temporaryFiles.delete(fileToDeleteId);\r\n    });\r\n  };\r\n\r\n  uploadFile = async (file: UserFile) => {\r\n    this.uploading = true;\r\n    try {\r\n      const blob = await fetch(file.url).then((r) => r.blob());\r\n      const response = await agent.Files.uploadFile(blob);\r\n      file.id = response.data.id;\r\n      file.url = response.data.url;\r\n      runInAction(() => (this.uploading = false));\r\n      return file;\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.uploading = false));\r\n    }\r\n  };\r\n\r\n  openFilePreviewModal = (\r\n    modalFile: any,\r\n    size:\r\n      | \"mini\"\r\n      | \"tiny\"\r\n      | \"small\"\r\n      | \"large\"\r\n      | \"fullscreen\"\r\n      | undefined = \"mini\"\r\n  ) => {\r\n    this.modal.open = true;\r\n    this.modal.file = modalFile;\r\n    this.modal.size = size;\r\n  };\r\n\r\n  closeFileModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    inverted?: boolean;\r\n    content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({inverted = true, content = 'Loading...'}: Props) {\r\n    return (\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content={content} />\r\n        </Dimmer>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nexport default observer(function ModalContainer() {\r\n  const { modalStore } = useStore();\r\n\r\n  return (\r\n    <Modal\r\n      open={modalStore.modal.open}\r\n      onClose={modalStore.closeModal}\r\n      size={modalStore.modal.size}\r\n      closeIcon\r\n    >\r\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n","import { useField } from \"formik\";\r\nimport _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  errorElementName: string;\r\n  type?: string;\r\n  label?: string;\r\n}\r\n\r\nexport default function ValidatedTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input\r\n        {...field}\r\n        {..._.omit(props, \"errorElementName\")}\r\n        autoComplete=\"off\"\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error.includes(\"required field\")\r\n            ? `${props.errorElementName} is required`\r\n            : meta.error.includes(\"must match\")\r\n            ? `Link must be a ${props.errorElementName}`\r\n            : `${meta.error.replace(props.name, props.errorElementName)}`}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport ValidatedTextInput from \"../../app/common/form/ValidatedTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function LoginForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.login(values).catch((error) => {\r\n          setErrors({ error: error.response.data });\r\n        })\r\n      }\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Login to MatchIT\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <ValidatedTextInput name=\"email\" placeholder=\"Email\" errorElementName=\"Email\"/>\r\n          <ValidatedTextInput\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            errorElementName=\"Password\"\r\n          />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => (\r\n              <Label\r\n                style={{ marginBottom: 10 }}\r\n                basic\r\n                color=\"red\"\r\n                content={errors.error}\r\n              />\r\n            )}\r\n          />\r\n          <Button\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Login\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((err: any, i: any) => (\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\nimport ValidatedTextInput from \"../../app/common/form/ValidatedTextInput\";\r\n\r\nexport default observer(function RegisterForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        displayName: \"\",\r\n        userName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.register(values).catch((error) => setErrors({ error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        userName: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form\r\n          className=\"ui form error\"\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Sign up to MatchIT\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <ValidatedTextInput\r\n            name=\"displayName\"\r\n            placeholder=\"Display Name\"\r\n            errorElementName=\"Display Name\"\r\n          />\r\n          <ValidatedTextInput\r\n            name=\"userName\"\r\n            placeholder=\"Username\"\r\n            errorElementName=\"Username\"\r\n          />\r\n          <ValidatedTextInput\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            errorElementName=\"Email\"\r\n          />\r\n          <ValidatedTextInput\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            errorElementName=\"Password\"\r\n          />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => <ValidationErrors errors={errors.error} />}\r\n          />\r\n          <Button\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Register\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\r\nimport LoginForm from \"../../features/users/LoginForm\";\r\nimport RegisterForm from \"../../features/users/RegisterForm\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n  const {\r\n    userStore: { user, logout, isLoggedIn },\r\n    modalStore,\r\n  } = useStore();\r\n  return (\r\n    <Menu inverted fixed=\"top\" className=\"navbar--menu\">\r\n      <Container>\r\n        <Menu.Item as={Link} to=\"/\" header>\r\n          <img src=\"/assets/logo.svg\" alt=\"logo\" />\r\n          MatchIT\r\n        </Menu.Item>\r\n        <>\r\n          <Menu.Item as={Link} to=\"/\" name=\"Experts\" />\r\n          <Menu.Item as={Link} to=\"/jobs\" name=\"Jobs\" />\r\n          {isLoggedIn() ? (\r\n            <Menu.Menu fixed=\"top\" position=\"right\">\r\n              {user && (\r\n                <Menu.Item position=\"right\">\r\n                  <Button\r\n                    as={Link}\r\n                    to=\"/addJob\"\r\n                    content=\"Add New Job Offer\"\r\n                    inverted\r\n                    className=\"positive--custom--inverted\"\r\n                  />\r\n                </Menu.Item>\r\n              )}\r\n              {user && !user.isExpert && (\r\n                <Menu.Item position=\"right\" style={{ paddingLeft: \"0\" }}>\r\n                  <Button\r\n                    as={Link}\r\n                    to=\"/becomeExpert\"\r\n                    content=\"Become an expert\"\r\n                    inverted\r\n                    className=\"positive--custom--inverted\"\r\n                  />\r\n                </Menu.Item>\r\n              )}\r\n              <Menu.Item\r\n                position=\"right\"\r\n                style={{\r\n                  position: \"relative\",\r\n                  minWidth: \"8em\",\r\n                  width: \"max-content\",\r\n                  paddingLeft: \"10px\",\r\n                }}\r\n                fitted=\"horizontally\"\r\n              >\r\n                <Image\r\n                  src={user?.photo?.url || \"/assets/user.png\"}\r\n                  avatar\r\n                  spaced=\"right\"\r\n                />\r\n                <Dropdown\r\n                  item\r\n                  pointing=\"top right\"\r\n                  text={user?.displayName}\r\n                  className=\"navbar-profile--dropdown\"\r\n                >\r\n                  <Dropdown.Menu style={{ marginTop: \"0.35em\" }}>\r\n                    <Dropdown.Item\r\n                      as={Link}\r\n                      to={`/profiles/${user?.userName}`}\r\n                      text=\"My Profile\"\r\n                      icon=\"user\"\r\n                    />\r\n                    <Dropdown.Item\r\n                      as={Link}\r\n                      to={`/jobs/user/${user?.userName}`}\r\n                      text=\"My Jobs\"\r\n                      icon=\"suitcase\"\r\n                    />\r\n                    <Dropdown.Item\r\n                      onClick={logout}\r\n                      text=\"Logout\"\r\n                      icon=\"power\"\r\n                    />\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </Menu.Item>\r\n            </Menu.Menu>\r\n          ) : (\r\n            <Menu.Menu fixed=\"top\" position=\"right\">\r\n              <Menu.Item position=\"right\">\r\n                <Button\r\n                  onClick={() => modalStore.openModal(<LoginForm />)}\r\n                  size=\"huge\"\r\n                  inverted\r\n                  style={{ marginRight: \"1em\" }}\r\n                  className=\"positive--custom--inverted\"\r\n                >\r\n                  Login\r\n                </Button>\r\n                <Button\r\n                  onClick={() => modalStore.openModal(<RegisterForm />)}\r\n                  size=\"huge\"\r\n                  inverted\r\n                  className=\"positive--custom--inverted\"\r\n                >\r\n                  Register\r\n                </Button>\r\n              </Menu.Item>\r\n            </Menu.Menu>\r\n          )}\r\n        </>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n});\r\n","import {\r\n  Redirect,\r\n  Route,\r\n  RouteComponentProps,\r\n  RouteProps,\r\n} from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n  component:\r\n    | React.ComponentType<RouteComponentProps<any>>\r\n    | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn() ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport ValidationErrors from \"./ValidationErrors\";\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios\r\n      .get(baseUrl + \"/buggy/not-found\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n  function handleBadRequest() {\r\n    axios\r\n      .get(baseUrl + \"/buggy/bad-request\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n  function handleServerError() {\r\n    axios\r\n      .get(baseUrl + \"/buggy/server-error\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n  function handleUnauthorized() {\r\n    axios\r\n      .get(baseUrl + \"/buggy/unauthorized\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(`${baseUrl}`, {}).catch((err) => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths={5}>\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button\r\n            onClick={handleBadRequest}\r\n            content=\"Bad Request\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleServerError}\r\n            content=\"Server Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleUnauthorized}\r\n            content=\"Unauthorized\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleValidationError}\r\n            content=\"Validation Error\"\r\n            basic\r\n            primary\r\n          />\r\n        </Button.Group>\r\n      </Segment>\r\n      {errors && <ValidationErrors errors={errors} />}\r\n    </>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n  const { commonStore } = useStore();\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server Error\" />\r\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\r\n          <code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import { useLocation } from \"react-router-dom\";\r\nimport { Action, State } from \"../../models/search\";\r\n\r\nexport default function useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport function searchReducer(state: State, action: Action): State {\r\n  switch (action.type) {\r\n    case \"CLEAN_QUERY\":\r\n      return { ...state, loading: false, results: action.results!, value: \"\" };\r\n    case \"START_SEARCH\":\r\n      return { ...state, loading: true, value: action.query! };\r\n    case \"FINISH_SEARCH\":\r\n      return { ...state, loading: false, results: action.results! };\r\n    case \"UPDATE_SELECTION\":\r\n      return { ...state, value: action.selection! };\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport useQuery from \"../../app/common/util/hooks\";\r\n\r\nexport default function RegisterSuccess() {\r\n  const email = useQuery().get(\"email\") as string;\r\n\r\n  function handleConfirmEmailResend() {\r\n    agent.Account.resendEmailConfirm(email)\r\n      .then(() => {\r\n        toast.success(\"Verification email resent - please check your email\");\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  return (\r\n    <Segment placeholder textAlign=\"center\">\r\n      <Header icon color=\"green\">\r\n        <Icon name=\"check\" />\r\n        Successfully registered!\r\n      </Header>\r\n      <p>\r\n        Please check your email (including junk email) for the verification\r\n        email\r\n      </p>\r\n      {email && (\r\n        <>\r\n          <p>Didn't receive the email? Click the below button to resend</p>\r\n          <Button\r\n            primary\r\n            onClick={handleConfirmEmailResend}\r\n            content=\"Resend email\"\r\n            size=\"huge\"\r\n          />\r\n        </>\r\n      )}\r\n    </Segment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../../app/api/agent\";\r\nimport useQuery from \"../../app/common/util/hooks\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nexport default function ConfirmEmail() {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n    modalStore,\r\n  } = useStore();\r\n  const email = useQuery().get(\"email\") as string;\r\n  const token = useQuery().get(\"token\") as string;\r\n\r\n  const Status = {\r\n    Verifying: \"Verifying\",\r\n    Failed: \"Failed\",\r\n    Success: \"Success\",\r\n  };\r\n\r\n  const [status, setStatus] = useState(Status.Verifying);\r\n\r\n  function handleConfirmEmailResend() {\r\n    agent.Account.resendEmailConfirm(email)\r\n      .then(() => {\r\n        toast.success(\"Verification email resent - please check your email\");\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  useEffect(() => {\r\n    agent.Account.verifyEmail(token, email)\r\n      .then(() => {\r\n        setStatus(Status.Success);\r\n      })\r\n      .catch(() => {\r\n        setStatus(Status.Failed);\r\n      });\r\n  }, [Status.Failed, Status.Success, token, email]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      history.push(\"/\");\r\n    }, 3000);\r\n  }, []);\r\n\r\n  function getBody() {\r\n    switch (status) {\r\n      case Status.Verifying:\r\n        return <p>Verifying...</p>;\r\n      case Status.Failed:\r\n        return (\r\n          <div>\r\n            <p>\r\n              Verification failed. You can try resending the verify link to your\r\n              email\r\n            </p>\r\n            <Button\r\n              primary\r\n              onClick={handleConfirmEmailResend}\r\n              size=\"huge\"\r\n              content=\"Resend email\"\r\n            />\r\n          </div>\r\n        );\r\n      case Status.Success:\r\n        if (isLoggedIn()) {\r\n          return (\r\n            <div>\r\n              <p>Email has been verified - redirecting...</p>\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div>\r\n              <p>Email has been verified - you can now login</p>\r\n              <Button\r\n                primary\r\n                onClick={() => modalStore.openModal(<LoginForm />)}\r\n                size=\"huge\"\r\n                content=\"Login\"\r\n              />\r\n            </div>\r\n          );\r\n        }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Segment placeholder textAlign=\"center\">\r\n      <Header icon>\r\n        <Icon name=\"envelope\" />\r\n        Email verification\r\n      </Header>\r\n      <Segment.Inline>{getBody()}</Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search' />\r\n                Oops - we've looked everywhere and could not find this.\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/' primary >\r\n                    Return to home page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment, useEffect } from \"react\";\r\nimport { Button, Header, Menu } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ExpertFilters() {\r\n  const {\r\n    expertStore: {\r\n      skillPredicate,\r\n      setSkillPredicate,\r\n      loadUsedSkills,\r\n      skillRegistry,\r\n      skillFilter,\r\n      filterDelay,\r\n      clearFilter,\r\n      loadingSkills,\r\n    },\r\n  } = useStore();\r\n\r\n  useEffect(() => {\r\n    loadUsedSkills();\r\n  }, [loadUsedSkills]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, [skillFilter.length]);\r\n\r\n  return (\r\n    <>\r\n      <Menu\r\n        vertical\r\n        size=\"large\"\r\n        style={{\r\n          width: \"100%\",\r\n          marginTop: 25,\r\n        }}\r\n      >\r\n        <Header\r\n          icon=\"filter\"\r\n          attached\r\n          color=\"teal\"\r\n          content=\"Filters\"\r\n          style={{\r\n            display: \"inline-block\",\r\n            border: \"none\",\r\n            margin: \"5px 2px 0px 2px\",\r\n          }}\r\n        />\r\n        <Button\r\n          disabled={skillFilter.length === 0}\r\n          compact\r\n          basic\r\n          icon=\"ban\"\r\n          content=\"Clear\"\r\n          size=\"medium\"\r\n          floated=\"right\"\r\n          negative\r\n          style={{\r\n            textAlign: \"center\",\r\n            marginTop: \"11px\",\r\n            marginRight: \"5px\",\r\n          }}\r\n          onClick={() => clearFilter()}\r\n        />\r\n        {loadingSkills ? (\r\n          <Menu.Item style={{ minHeight: \"15em\" }}>\r\n            <LoadingComponent content=\"Loading...\" />\r\n          </Menu.Item>\r\n        ) : (\r\n          <div style={{ maxHeight: \"20em\", overflowY: \"auto\" }}>\r\n            {Array.from(skillRegistry)\r\n              .sort(\r\n                ([_, s1], [__, s2]) =>\r\n                  s2.count - s1.count || s1.name.localeCompare(s2.name)\r\n              )\r\n              .sort(([_, s1], [__, s2]) => {\r\n                if (\r\n                  Array.from(skillPredicate.values())[0].split(\",\").includes(s1.name)\r\n                )\r\n                  return -1;\r\n                else if (\r\n                  Array.from(skillPredicate.values())[0].split(\",\").includes(s1.name)\r\n                )\r\n                  return 1;\r\n                else {\r\n                  return 0;\r\n                }\r\n              })\r\n              .map(([id, skill]) => (\r\n                <Menu.Item\r\n                  key={id}\r\n                  content={`${skill.name} (${skill.count})`}\r\n                  active={Array.from(skillPredicate.values())[0]\r\n                    .split(\",\")\r\n                    .includes(skill.name)}\r\n                  disabled={\r\n                    skill.count === 0 &&\r\n                    !Array.from(skillPredicate.values())[0]\r\n                      .split(\",\")\r\n                      .includes(skill.name)\r\n                  }\r\n                  onClick={() => {\r\n                    clearTimeout(filterDelay);\r\n                    setSkillPredicate(skill.name);\r\n                  }}\r\n                />\r\n              ))}\r\n          </div>\r\n        )}\r\n      </Menu>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Item, Segment } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\ninterface Props {\r\n  expert: Profile;\r\n}\r\n\r\nexport default observer(function ExpertListItem({ expert }: Props) {\r\n  const {\r\n    expertStore: { setSkillPredicate, skillPredicate },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              size=\"tiny\"\r\n              src={expert.photo?.url || \"/assets/user.png\"}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/profiles/${expert.userName}`}>\r\n                {expert.displayName}\r\n              </Item.Header>\r\n              <Item.Description>{expert.bio}</Item.Description>\r\n              {/* <UserRating rating={expert.rating} disabled /> */}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment className=\"skillList-container\">\r\n        {expert.skills.map((skill) => (\r\n          <Button\r\n          size=\"small\"\r\n            className=\"skillList-skillButton\"\r\n            key={skill.id}\r\n            content={skill.name}\r\n            disabled={Array.from(skillPredicate.values())[0]\r\n              .split(\",\")\r\n              .includes(skill.name)}\r\n            onClick={() => {\r\n              setSkillPredicate(skill.name);\r\n            }}\r\n          />\r\n        ))}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport ExpertListItem from \"./ExpertListItem\";\r\n\r\ninterface Props {\r\n  expertArray: Profile[];\r\n}\r\n\r\nexport default observer(function ExpertList({ expertArray }: Props) {\r\n  return (\r\n    <>\r\n      {expertArray.slice().map((expert) => (\r\n        <ExpertListItem key={expert.userName} expert={expert} />\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Placeholder, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function ExpertListItemPlaceholder() {\r\n  return (\r\n    <Placeholder fluid>\r\n      <Segment.Group>\r\n        <Segment>\r\n          <Placeholder>\r\n            <Placeholder.Header image>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder.Header>\r\n            <Placeholder.Paragraph>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder.Paragraph>\r\n          </Placeholder>\r\n        </Segment>\r\n        <Segment>\r\n          <Placeholder.Line />\r\n          <Placeholder.Line />\r\n        </Segment>\r\n      </Segment.Group>\r\n    </Placeholder>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Dropdown, DropdownProps } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ExpertSort() {\r\n  const {\r\n    expertStore: { sortExpertsBy, changeSorting },\r\n  } = useStore();\r\n\r\n  const dropdownSortOptions = [\r\n    { key: 1, text: \"Display Name: alphabetically\", value: \"displayNameAsc\" },\r\n    // { key: 1, text: \"Rating: highest\", value: \"ratingHighest\" },\r\n  ];\r\n\r\n  function handleSortChange(\r\n    e: React.SyntheticEvent<HTMLElement, Event>,\r\n    props: DropdownProps\r\n  ) {\r\n    if (props.value) changeSorting(props.value.toString());\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dropdown\r\n        direction=\"left\"\r\n        selection\r\n        className=\"listSort-dropdown\"\r\n        style={{ float: \"right\" }}\r\n        options={dropdownSortOptions}\r\n        value={sortExpertsBy}\r\n        onChange={handleSortChange}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Header, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ExpertFilters from \"./ExpertFilters\";\r\nimport ExpertList from \"./ExpertList\";\r\nimport ExpertListItemPlaceholder from \"./ExpertListItemPlaceholder\";\r\nimport ExpertSort from \"./ExpertSort\";\r\n\r\nexport default observer(function ExpertDashboard() {\r\n  const { expertStore } = useStore();\r\n  const {\r\n    loadExperts,\r\n    expertArray,\r\n    setPagingParams,\r\n    pagination,\r\n    loadingExperts,\r\n    resetState,\r\n    resetExpertArray,\r\n    loadingSkills,\r\n  } = expertStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n  const [loadingInitial, setLoadingInitial] = useState(false);\r\n  let timerRef = useRef<ReturnType<typeof setTimeout>>();\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadExperts().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = \"Experts - MatchIT\";\r\n    resetState();\r\n    resetExpertArray();\r\n  }, [resetExpertArray, resetState]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      expertArray.length === 0 &&\r\n      !loadingExperts &&\r\n      (!loadingInitial || loadingSkills)\r\n    ) {\r\n      loadExperts().then(() => setLoadingInitial(true));\r\n    } else if (expertArray.length === 0 && !loadingExperts && loadingInitial) {\r\n      timerRef.current = setTimeout(() => {\r\n        loadExperts();\r\n      }, 10000);\r\n    } else {\r\n      clearTimeout(timerRef.current!);\r\n    }\r\n    return () => {\r\n      clearTimeout(timerRef.current!);\r\n    };\r\n  }, [expertArray.length, loadExperts, loadingExperts, loadingInitial, loadingSkills]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"6\">\r\n        <Grid.Row style={{ marginBottom: \"50px\" }}>\r\n          <ExpertSort />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <ExpertFilters />\r\n        </Grid.Row>\r\n      </Grid.Column>\r\n      <Grid.Column width=\"10\">\r\n        {loadingExperts && !loadingNext ? (\r\n          <>\r\n            <ExpertListItemPlaceholder />\r\n            <ExpertListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={\r\n              !loadingNext &&\r\n              !!pagination &&\r\n              pagination.currentPage < pagination.totalPages\r\n            }\r\n            initialLoad={false}\r\n          >\r\n            {loadingInitial && expertArray.length > 0 ? (\r\n              <ExpertList expertArray={expertArray} />\r\n            ) : (\r\n              <Header content=\"There are no experts yet\" icon=\"list\" />\r\n            )}\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"10\">\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport * as Yup from \"yup\";\r\nimport ValidatedTextInput from \"../../../../app/common/form/ValidatedTextInput\";\r\nimport { Profile } from \"../../../../app/models/profile\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function AccountLinksForm({\r\n  setEditMode,\r\n  profile,\r\n}: Props) {\r\n  const {\r\n    profileStore: { addAccountLinks},\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        githubProfileUrl: profile.githubProfileUrl || \"\",\r\n        linkedInProfileUrl: profile.linkedInProfileUrl || \"\",\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) => {\r\n        try {\r\n          addAccountLinks(values);\r\n          setEditMode(false);\r\n        } catch (error: any) {\r\n          setErrors({ error });\r\n        }\r\n      }}\r\n      onReset={(values, { resetForm }) => resetForm()}\r\n      validationSchema={Yup.object({\r\n        githubProfileUrl: Yup.string().url().matches(new RegExp(\"github.com\")),\r\n        linkedInProfileUrl: Yup.string()\r\n          .url()\r\n          .matches(new RegExp(\"linkedin.com\")),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isValid }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <ValidatedTextInput\r\n            name=\"githubProfileUrl\"\r\n            placeholder=\"Link to your GitHub Profile\"\r\n            label=\"Link to your GitHub Profile\"\r\n            errorElementName=\"GitHub link\"\r\n          />\r\n          <ValidatedTextInput\r\n            name=\"linkedInProfileUrl\"\r\n            placeholder=\"Link to your LinkedIn Profile\"\r\n            label=\"Link to your LinkedIn Profile\"\r\n            errorElementName=\"LinkedIn link\"\r\n          />\r\n          <Button\r\n            content=\"Save\"\r\n            size=\"big\"\r\n            style={{ fontSize: \"1.35em\" }}\r\n            type=\"submit\"\r\n            className=\"positive--custom\"\r\n            disabled={!isValid}\r\n          />\r\n          <Button\r\n            type=\"reset\"\r\n            content=\"Cancel\"\r\n            size=\"big\"\r\n            style={{ fontSize: \"1.35em\" }}\r\n            onClick={() => {\r\n              setEditMode(false);\r\n            }}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\nimport { Button, Header, Input } from \"semantic-ui-react\";\r\nimport AccountLinksForm from \"../forms/AccountLinksForm\";\r\n\r\nexport default observer(function AccountLinksSegment() {\r\n  const {\r\n    profileStore: { profile, loadingLinks },\r\n  } = useStore();\r\n\r\n  const [linkEditMode, setLinkEditMode] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\">Profile links</Header>\r\n      {linkEditMode ? (\r\n        <AccountLinksForm setEditMode={setLinkEditMode} profile={profile!} />\r\n      ) : (\r\n        <div className=\"ui form\">\r\n          <div className=\"accountLink-input__disabled field\">\r\n            <label>Link to your GitHub Profile</label>\r\n            {loadingLinks ? (\r\n              <Input\r\n                disabled\r\n                className=\"loading--custom\"\r\n                placeholder=\"Loading...\"\r\n                value=\"\"\r\n              />\r\n            ) : (\r\n              <Input\r\n                placeholder=\"Link to your GitHub Profile\"\r\n                disabled\r\n                value={profile?.githubProfileUrl || \"\"}\r\n              ></Input>\r\n            )}\r\n          </div>\r\n          <div className=\"accountLink-input__disabled field\">\r\n            <label>Link to your LinkedIn Profile</label>\r\n            {loadingLinks ? (\r\n              <Input\r\n                disabled\r\n                className=\"loading--custom\"\r\n                fluid\r\n                placeholder=\"Loading...\"\r\n                value=\"\"\r\n              />\r\n            ) : (\r\n              <Input\r\n                placeholder=\"Link to your LinkedIn Profile\"\r\n                disabled\r\n                value={profile?.linkedInProfileUrl || \"\"}\r\n                loading={loadingLinks}\r\n              />\r\n            )}\r\n          </div>\r\n          <Button\r\n            content=\"Edit\"\r\n            size=\"big\"\r\n            style={{ fontSize: \"1.35em\" }}\r\n            onClick={() => setLinkEditMode(true)}\r\n            className=\"positive--custom\"\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Header, Segment } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  segmentName: string;\r\n  onClick: () => void;\r\n}\r\n\r\nexport default function AddNewButton({ segmentName, onClick }: Props) {\r\n  return (\r\n    <Segment\r\n      className=\"becomeExpert--addPlaceholder__hover asAButton\"\r\n      style={{ minHeight: \"2em\" }}\r\n      onClick={onClick}\r\n    >\r\n      <Header\r\n        icon=\"add\"\r\n        content={`Add new ${segmentName}`}\r\n        textAlign=\"center\"\r\n        style={{ lineHeight: \"2em\" }}\r\n      />\r\n    </Segment>\r\n  );\r\n}\r\n","import { format } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { Item } from \"semantic-ui-react\";\r\nimport { Certification } from \"../../../app/models/profile\";\r\n\r\ninterface Props {\r\n  certificate: Certification;\r\n}\r\n\r\nexport default function CertificationElement({ certificate }: Props) {\r\n  return (\r\n    <Item>\r\n      <Item.Content>\r\n        <Item.Header as=\"h3\" style={{ display: \"inline\", marginRight: '0.6em' }}>\r\n          {certificate.name}\r\n        </Item.Header>\r\n        <Item.Meta style={{ display: \"inline\" }}>{`${format(\r\n          new Date(certificate.dateAcquired),\r\n          \"dd-MM-yyyy\"\r\n        )}`}</Item.Meta>\r\n      </Item.Content>\r\n    </Item>\r\n  );\r\n}\r\n","import { useField, useFormikContext } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { Checkbox, Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport _ from \"lodash\";\r\n\r\ninterface Props {\r\n  name: string;\r\n  dayPlaceholder?: string;\r\n  monthPlaceholder?: string;\r\n  yearPlaceholder?: string;\r\n  errorElementName: string;\r\n  label?: string;\r\n  optional?: boolean;\r\n  maxDate?: Date;\r\n}\r\n\r\nexport default function ValidatedDatePicker(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  const { setFieldValue, setFieldTouched } = useFormikContext();\r\n  const [disableCheckbox, setDisableCheckbox] = useState(false);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <DatePicker\r\n        {..._.omit(field, \"onBlur\")}\r\n        {..._.omit(props, \"errorElementName\")}\r\n        format=\"dd/MM/yyyy\"\r\n        value={(field.value && new Date(field.value)) || null}\r\n        onChange={(val: Date) => {\r\n          // val\r\n          //   ? setFieldTouched(props.name, false)\r\n          //   : setFieldTouched(props.name, true);\r\n          setFieldTouched(props.name, !!!val);\r\n          setFieldValue(field.name, val);\r\n        }}\r\n        calendarIcon={null}\r\n        clearIcon={null}\r\n        disabled={props.optional && disableCheckbox}\r\n        required={!props.optional}\r\n      />\r\n      {props.optional && (\r\n        <Checkbox\r\n          style={{ marginLeft: \"1em\" }}\r\n          label={`Currently ${props.label?.split(\" \")[0].toLocaleLowerCase()}`}\r\n          onChange={(e, { checked }) => {\r\n            setDisableCheckbox(!!checked);\r\n            !!checked\r\n              ? setFieldValue(field.name, null)\r\n              : setFieldValue(field.name, new Date());\r\n          }}\r\n        />\r\n      )}\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error.includes(\"Invalid Date\")\r\n            ? `${props.errorElementName} is required`\r\n            : `${meta.error.replace(props.name, props.errorElementName)}`}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport ValidatedTextInput from \"../../../../app/common/form/ValidatedTextInput\";\r\nimport ValidatedDatePicker from \"../../../../app/common/form/ValidatedDatePicker\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function CertificationForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { addCertification },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        certificateName: \"\",\r\n        dateAcquired: new Date(),\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) => {\r\n        try {\r\n          addCertification(values);\r\n        } catch (error: any) {\r\n          setErrors({ error });\r\n        }\r\n        setEditMode(false);\r\n      }}\r\n      onReset={(values, { resetForm }) => resetForm()}\r\n      validationSchema={Yup.object({\r\n        certificateName: Yup.string().required(),\r\n        dateAcquired: Yup.date().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isValid }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <ValidatedTextInput\r\n            name=\"certificateName\"\r\n            placeholder=\"Certificate Name\"\r\n            label=\"Certificate Name\"\r\n            errorElementName=\"Certificate Name\"\r\n          />\r\n          <ValidatedDatePicker\r\n            name=\"dateAcquired\"\r\n            label=\"Date Acquired\"\r\n            errorElementName=\"Date Acquired\"\r\n            maxDate={new Date()}\r\n          />\r\n          <Button\r\n            content=\"Add\"\r\n            size=\"big\"\r\n            style={{ fontSize: \"1.35em\" }}\r\n            type=\"submit\"\r\n            className=\"positive--custom\"\r\n            disabled={!isValid}\r\n          />\r\n          <Button\r\n            type=\"reset\"\r\n            content=\"Cancel\"\r\n            size=\"big\"\r\n            style={{ fontSize: \"1.35em\" }}\r\n            onClick={() => setEditMode(false)}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { Header, Item } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\nimport AddNewButton from \"../../profileItemElements/AddNewItemButton\";\r\nimport CertificationElement from \"../../profileItemElements/CertificationElement\";\r\nimport CertificationForm from \"../forms/CertificationForm\";\r\n\r\nexport default observer(function CertificationSegment() {\r\n  const {\r\n    profileStore: { editedProfile },\r\n  } = useStore();\r\n\r\n  const [editCertificationMode, setEditCertificationMode] = useState(false);\r\n  return (\r\n    <>\r\n      <Header as=\"h1\">Certification</Header>\r\n      {editCertificationMode ? (\r\n        <CertificationForm setEditMode={setEditCertificationMode} />\r\n      ) : (\r\n        <AddNewButton\r\n          segmentName=\"Certificate\"\r\n          onClick={() => setEditCertificationMode(true)}\r\n        />\r\n      )}\r\n      <Item.Group>\r\n      {editedProfile &&\r\n        editedProfile.certifications.map((certificate) => (\r\n          <CertificationElement\r\n            key={certificate.id}\r\n            certificate={certificate}\r\n          />\r\n        ))}\r\n        </Item.Group>\r\n    </>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { Item } from \"semantic-ui-react\";\r\nimport { EducationItem } from \"../../../app/models/profile\";\r\n\r\ninterface Props {\r\n  educationItem: EducationItem;\r\n}\r\n\r\nexport default function EducationItemElement({ educationItem }: Props) {\r\n  return (\r\n    <Item>\r\n      <Item.Content>\r\n        <Item.Header as=\"h2\">\r\n          {`${educationItem.facilityName}, ${educationItem.facilityLocation}`}\r\n        </Item.Header>\r\n        <Item.Meta>{`${format(\r\n          new Date(educationItem.studyingFrom),\r\n          \"dd-MM-yyyy\"\r\n        )} - ${\r\n          educationItem.studyingTo\r\n            ? new Date(educationItem.studyingTo).getTime() < Date.now()\r\n              ? format(new Date(educationItem.studyingTo), \"dd-MM-yyyy\")\r\n              : `Currently (Expected ${format(\r\n                  new Date(educationItem.studyingTo),\r\n                  \"dd-MM-yyyy\"\r\n                )})`\r\n            : \"Currently\"\r\n        }`}</Item.Meta>\r\n        <Item.Description>{educationItem.fieldOfStudy}</Item.Description>\r\n      </Item.Content>\r\n    </Item>\r\n  );\r\n}\r\n","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport ValidatedTextInput from \"../../../../app/common/form/ValidatedTextInput\";\r\nimport ValidatedDatePicker from \"../../../../app/common/form/ValidatedDatePicker\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function EducationForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { addEducationItem },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        facilityName: \"\",\r\n        facilityLocation: \"\",\r\n        fieldOfStudy: \"\",\r\n        studyingFrom: new Date(),\r\n        studyingTo: new Date(),\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) => {\r\n        try {\r\n          addEducationItem(values);\r\n        } catch (error: any) {\r\n          setErrors({ error });\r\n        }\r\n        setEditMode(false);\r\n      }}\r\n      onReset={(values, { resetForm }) => resetForm()}\r\n      validationSchema={Yup.object({\r\n        facilityName: Yup.string().required(),\r\n        facilityLocation: Yup.string().required(),\r\n        fieldOfStudy: Yup.string().required(),\r\n        studyingFrom: Yup.date().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isValid }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <ValidatedTextInput\r\n            name=\"facilityName\"\r\n            placeholder=\"Facility Name\"\r\n            label=\"Facility Name\"\r\n            errorElementName=\"Facility Name\"\r\n          />\r\n          <ValidatedTextInput\r\n            name=\"facilityLocation\"\r\n            placeholder=\"Facility Location\"\r\n            label=\"Facility Location\"\r\n            errorElementName=\"Facility Location\"\r\n          />\r\n          <ValidatedTextInput\r\n            name=\"fieldOfStudy\"\r\n            placeholder=\"Field Of Study\"\r\n            label=\"Field Of Study\"\r\n            errorElementName=\"Field of Study\"\r\n          />\r\n          <ValidatedDatePicker\r\n            name=\"studyingFrom\"\r\n            label=\"Attending From\"\r\n            errorElementName=\"Attending From\"\r\n          />\r\n          <ValidatedDatePicker\r\n            name=\"studyingTo\"\r\n            label=\"Attending To\"\r\n            optional\r\n            errorElementName=\"Attending To\"\r\n          />\r\n          <Button\r\n            content=\"Add\"\r\n            size=\"big\"\r\n            style={{ fontSize: \"1.35em\" }}\r\n            type=\"submit\"\r\n            className=\"positive--custom\"\r\n            disabled={!isValid}\r\n          />\r\n          <Button\r\n            type=\"reset\"\r\n            content=\"Cancel\"\r\n            size=\"big\"\r\n            style={{ fontSize: \"1.35em\" }}\r\n            onClick={() => setEditMode(false)}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { Header, Item } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\nimport AddNewButton from \"../../profileItemElements/AddNewItemButton\";\r\nimport EducationItemElement from \"../../profileItemElements/EducationItemElement\";\r\nimport EducationForm from \"../forms/EducationForm\";\r\n\r\nexport default observer(function EducationSegment() {\r\n  const {\r\n    profileStore: { editedProfile },\r\n  } = useStore();\r\n  const [editEducationMode, setEditEducationMode] = useState(false);\r\n  return (\r\n    <>\r\n      <Header as=\"h1\">Education</Header>\r\n      {editEducationMode ? (\r\n        <EducationForm setEditMode={setEditEducationMode} />\r\n      ) : (\r\n        <AddNewButton\r\n          segmentName=\"Education Item\"\r\n          onClick={() => setEditEducationMode(true)}\r\n        />\r\n      )}\r\n      <Item.Group>\r\n        {editedProfile &&\r\n          editedProfile.education.map((educationItem) => (\r\n            <EducationItemElement\r\n              key={educationItem.id}\r\n              educationItem={educationItem}\r\n            />\r\n          ))}\r\n      </Item.Group>\r\n    </>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { Item, List } from \"semantic-ui-react\";\r\nimport { EmploymentItem } from \"../../../app/models/profile\";\r\n\r\ninterface Props {\r\n  employmentItem: EmploymentItem;\r\n}\r\n\r\nexport default function EmploymentItemElement({ employmentItem }: Props) {\r\n  return (\r\n    <Item>\r\n      <Item.Content>\r\n        <Item.Header as=\"h2\">{employmentItem.description.title}</Item.Header>\r\n        <Item.Extra as=\"h4\" style={{ color: \"rgba(0,0,0,0.7)\" }}>\r\n          {employmentItem.description.summary}\r\n        </Item.Extra>\r\n        <Item.Meta>{`${format(\r\n          new Date(employmentItem.employedFrom),\r\n          \"dd-MM-yyyy\"\r\n        )} - ${\r\n          employmentItem.employedTo\r\n            ? new Date(employmentItem.employedTo).getTime() < Date.now()\r\n              ? format(new Date(employmentItem.employedTo), \"dd-MM-yyyy\")\r\n              : \"Currently\"\r\n            : \"Currently\"\r\n        }`}</Item.Meta>\r\n        <Item.Description>\r\n          <List bulleted>\r\n            {employmentItem.description.bulletPoints.map((bulletPoint) => (\r\n              <List.Item key={bulletPoint.id}>{bulletPoint.text}</List.Item>\r\n            ))}\r\n          </List>\r\n        </Item.Description>\r\n      </Item.Content>\r\n    </Item>\r\n  );\r\n}\r\n","import React, { KeyboardEvent, MouseEvent, useState } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { FieldArray, Form, Formik } from \"formik\";\r\nimport ValidatedTextInput from \"../../../../app/common/form/ValidatedTextInput\";\r\nimport ValidatedDatePicker from \"../../../../app/common/form/ValidatedDatePicker\";\r\nimport * as Yup from \"yup\";\r\nimport { Button, Label, List, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\nimport { BulletPoint } from \"../../../../app/models/profile\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function EmploymentForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { addEmploymentItem },\r\n  } = useStore();\r\n  const [hoverListItem, setHoverListItem] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        companyName: \"\",\r\n        companyPosition: \"\",\r\n        employedFrom: new Date(),\r\n        employedTo: new Date(),\r\n        bulletPoint: \"\",\r\n        jobBulletList: [] as BulletPoint[],\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) => {\r\n        try {\r\n          addEmploymentItem(values);\r\n        } catch (error: any) {\r\n          setErrors({ error });\r\n        }\r\n        setEditMode(false);\r\n      }}\r\n      onReset={(values, { resetForm }) => resetForm()}\r\n      validationSchema={Yup.object({\r\n        companyName: Yup.string().required(),\r\n        companyPosition: Yup.string().required(),\r\n        employedFrom: Yup.date().required(),\r\n        bulletPoint: Yup.string(),\r\n        jobBulletList: Yup.array()\r\n          .min(1, \"The description must have at least 1 bullet point\")\r\n          .required(),\r\n      })}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        isValid,\r\n        values,\r\n        errors: { jobBulletList: bulletListError },\r\n        setFieldValue,\r\n      }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <ValidatedTextInput\r\n            name=\"companyName\"\r\n            placeholder=\"Company Name\"\r\n            label=\"Company Name\"\r\n            errorElementName=\"Company Name\"\r\n          />\r\n          <ValidatedTextInput\r\n            name=\"companyPosition\"\r\n            placeholder=\"Role in the company\"\r\n            label=\"Role in the company\"\r\n            errorElementName=\"Role in the company\"\r\n          />\r\n          <ValidatedDatePicker\r\n            name=\"employedFrom\"\r\n            label=\"Employed From\"\r\n            errorElementName=\"Employed From\"\r\n          />\r\n          <ValidatedDatePicker\r\n            name=\"employedTo\"\r\n            label=\"Employed To\"\r\n            optional\r\n            errorElementName=\"Employed To\"\r\n          />\r\n          <FieldArray\r\n            name=\"jobBulletList\"\r\n            render={(arrayHelpers) => (\r\n              <>\r\n                <label style={{ fontWeight: 700, fontSize: \".92857143em\" }}>\r\n                  Description of the position\r\n                </label>\r\n\r\n                <Segment>\r\n                  <List>\r\n                    {values.jobBulletList.length > 0 &&\r\n                      values.jobBulletList.map((bulletPoint, index) => (\r\n                        <List.Item\r\n                          id={\"bulletPoint\" + bulletPoint.id}\r\n                          key={bulletPoint.id}\r\n                          onMouseEnter={(\r\n                            e: MouseEvent<HTMLDivElement, MouseEvent>\r\n                          ) => {\r\n                            setTarget(e.currentTarget.id);\r\n                            setHoverListItem(true);\r\n                          }}\r\n                          onMouseLeave={() => setHoverListItem(false)}\r\n                          onClick={() => arrayHelpers.remove(index)}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        >\r\n                          <List.Icon\r\n                            verticalAlign=\"middle\"\r\n                            name={\r\n                              hoverListItem &&\r\n                              target === `bulletPoint${bulletPoint.id}`\r\n                                ? \"close\"\r\n                                : \"circle\"\r\n                            }\r\n                            size={\r\n                              hoverListItem &&\r\n                              target === `bulletPoint${bulletPoint.id}`\r\n                                ? \"small\"\r\n                                : \"mini\"\r\n                            }\r\n                          />\r\n                          <List.Content>{bulletPoint.text}</List.Content>\r\n                        </List.Item>\r\n                      ))}\r\n                  </List>\r\n                </Segment>\r\n                {bulletListError?.toString() ? (\r\n                  <Label basic color=\"red\">\r\n                    {bulletListError.toString()}\r\n                  </Label>\r\n                ) : null}\r\n                <ValidatedTextInput\r\n                  name=\"bulletPoint\"\r\n                  placeholder=\"Add a bullet point to the description\"\r\n                  errorElementName=\"Description of the position\"\r\n                />\r\n                <Button\r\n                  className=\"positive--custom--inverted\"\r\n                  disabled={values.bulletPoint.length === 0}\r\n                  type=\"submit\"\r\n                  content=\"Add Bullet Point\"\r\n                  onKeyPress={(e: KeyboardEvent) => {\r\n                    e.preventDefault();\r\n                    if (e.key === \"Enter\") {\r\n                      arrayHelpers.push({\r\n                        id: uuid(),\r\n                        text: values.bulletPoint,\r\n                      } as BulletPoint);\r\n                      setFieldValue(\"bulletPoint\", \"\");\r\n                    }\r\n                  }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    arrayHelpers.push({\r\n                      id: uuid(),\r\n                      text: values.bulletPoint,\r\n                    } as BulletPoint);\r\n                    setFieldValue(\"bulletPoint\", \"\");\r\n                  }}\r\n                  style={{ display: \"block\", marginBottom: \"1em\" }}\r\n                />\r\n              </>\r\n            )}\r\n          />\r\n\r\n          <Button\r\n            content=\"Add\"\r\n            size=\"big\"\r\n            style={{ fontSize: \"1.35em\" }}\r\n            type=\"submit\"\r\n            className=\"positive--custom\"\r\n            disabled={!isValid}\r\n          />\r\n          <Button\r\n            type=\"reset\"\r\n            content=\"Cancel\"\r\n            size=\"big\"\r\n            style={{ fontSize: \"1.35em\" }}\r\n            onClick={() => setEditMode(false)}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { Header, Item } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\nimport AddNewButton from \"../../profileItemElements/AddNewItemButton\";\r\nimport EmploymentItemElement from \"../../profileItemElements/EmploymentItemElement\";\r\nimport EmploymentForm from \"../forms/EmploymentForm\";\r\n\r\nexport default observer(function EmploymentSegment() {\r\n  const {\r\n    profileStore: { editedProfile },\r\n  } = useStore();\r\n  const [editEmploymentMode, setEditEmploymentMode] = useState(false);\r\n  return (\r\n    <>\r\n      <Header as=\"h1\">Employment</Header>\r\n      {editEmploymentMode ? (\r\n        <EmploymentForm setEditMode={setEditEmploymentMode} />\r\n      ) : (\r\n        <AddNewButton\r\n          segmentName=\"Employment Item\"\r\n          onClick={() => setEditEmploymentMode(true)}\r\n        />\r\n      )}\r\n      <Item.Group>\r\n        {editedProfile &&\r\n          editedProfile.employment.map((employmentItem) => (\r\n            <EmploymentItemElement\r\n              key={employmentItem.id}\r\n              employmentItem={employmentItem}\r\n            />\r\n          ))}\r\n      </Item.Group>\r\n    </>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Item, List } from \"semantic-ui-react\";\r\nimport { ExperienceItem } from \"../../../app/models/profile\";\r\n\r\ninterface Props {\r\n  experienceItem: ExperienceItem;\r\n}\r\n\r\nexport default function ExperienceItemElement({ experienceItem }: Props) {\r\n  return (\r\n    <Item>\r\n      <Item.Content>\r\n        <Item.Header as=\"h2\">{experienceItem.description.title}</Item.Header>\r\n        <Item.Extra as=\"h4\" style={{ color: \"rgba(0,0,0,0.7)\" }}>\r\n          {experienceItem.description.summary}\r\n        </Item.Extra>\r\n        <Item.Description>\r\n          <List bulleted>\r\n            {experienceItem.description.bulletPoints.map((bulletPoint) => (\r\n              <List.Item key={bulletPoint.id}>{bulletPoint.text}</List.Item>\r\n            ))}\r\n          </List>\r\n        </Item.Description>\r\n      </Item.Content>\r\n    </Item>\r\n  );\r\n}\r\n","import { FieldArray, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { MouseEvent, useState } from \"react\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport ValidatedTextInput from \"../../../../app/common/form/ValidatedTextInput\";\r\nimport { Button, Label, List, Segment } from \"semantic-ui-react\";\r\nimport { BulletPoint } from \"../../../../app/models/profile\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ExperienceForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { addExperienceItem },\r\n  } = useStore();\r\n  const [hoverListItem, setHoverListItem] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        title: \"\",\r\n        summary: \"\",\r\n        bulletPoint: \"\",\r\n        bulletList: [] as BulletPoint[],\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) => {\r\n        try {\r\n          addExperienceItem(values);\r\n        } catch (error: any) {\r\n          setErrors({ error });\r\n        }\r\n        setEditMode(false);\r\n      }}\r\n      onReset={(values, { resetForm }) => resetForm()}\r\n      validationSchema={Yup.object({\r\n        title: Yup.string().required(),\r\n        summary: Yup.string().required(),\r\n        bulletList: Yup.array()\r\n          .min(1, \"The description must have at least 1 bullet point\")\r\n          .required(),\r\n      })}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        isValid,\r\n        values,\r\n        errors: { bulletList: bulletListError },\r\n        setFieldValue,\r\n      }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <ValidatedTextInput\r\n            name=\"title\"\r\n            placeholder=\"Experience Name\"\r\n            label=\"What work/professional experience have you gained?\"\r\n            errorElementName=\"Experience Name\"\r\n          />\r\n          <ValidatedTextInput\r\n            name=\"summary\"\r\n            placeholder=\"Summary\"\r\n            label=\"Short summary of the experience\"\r\n            errorElementName=\"Summary\"\r\n          />\r\n          <FieldArray\r\n            name=\"bulletList\"\r\n            render={(arrayHelpers) => (\r\n              <>\r\n                <label style={{ fontWeight: 700, fontSize: \".92857143em\" }}>\r\n                  Description of the experience\r\n                </label>\r\n                <Segment style={{ minHeight: \"3em\" }}>\r\n                  <List>\r\n                    {values.bulletList.length > 0 &&\r\n                      values.bulletList.map((bulletPoint, index) => (\r\n                        <List.Item\r\n                          id={\"bulletPoint\" + bulletPoint.id}\r\n                          key={bulletPoint.id}\r\n                          onMouseEnter={(\r\n                            e: MouseEvent<HTMLDivElement, MouseEvent>\r\n                          ) => {\r\n                            setTarget(e.currentTarget.id);\r\n                            setHoverListItem(true);\r\n                          }}\r\n                          onMouseLeave={() => setHoverListItem(false)}\r\n                          onClick={() => arrayHelpers.remove(index)}\r\n                          style={{ cursor: \"pointer\" }}\r\n                        >\r\n                          <List.Icon\r\n                            verticalAlign=\"middle\"\r\n                            name={\r\n                              hoverListItem &&\r\n                              target === `bulletPoint${bulletPoint.id}`\r\n                                ? \"close\"\r\n                                : \"circle\"\r\n                            }\r\n                            size={\r\n                              hoverListItem &&\r\n                              target === `bulletPoint${bulletPoint.id}`\r\n                                ? \"small\"\r\n                                : \"mini\"\r\n                            }\r\n                          />\r\n                          <List.Content>{bulletPoint.text}</List.Content>\r\n                        </List.Item>\r\n                      ))}\r\n                  </List>\r\n                </Segment>\r\n                {bulletListError?.toString() ? (\r\n                  <Label basic color=\"red\">\r\n                    {bulletListError.toString()}\r\n                  </Label>\r\n                ) : null}\r\n                <ValidatedTextInput\r\n                  name=\"bulletPoint\"\r\n                  placeholder=\"Add a bullet point to the description\"\r\n                  errorElementName=\"Description of the position\"\r\n                />\r\n                <Button\r\n                  className=\"positive--custom--inverted\"\r\n                  disabled={values.bulletPoint.length === 0}\r\n                  type=\"submit\"\r\n                  content=\"Add Bullet Point\"\r\n                  onKeyPress={(e: KeyboardEvent) => {\r\n                    e.preventDefault();\r\n                    if (e.key === \"Enter\") {\r\n                      arrayHelpers.push({\r\n                        id: uuid(),\r\n                        text: values.bulletPoint,\r\n                      } as BulletPoint);\r\n                      setFieldValue(\"bulletPoint\", \"\");\r\n                    }\r\n                  }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    arrayHelpers.push({\r\n                      id: uuid(),\r\n                      text: values.bulletPoint,\r\n                    } as BulletPoint);\r\n                    setFieldValue(\"bulletPoint\", \"\");\r\n                  }}\r\n                  style={{ display: \"block\", marginBottom: \"1em\" }}\r\n                />\r\n              </>\r\n            )}\r\n          />\r\n          <Button\r\n            content=\"Add\"\r\n            size=\"big\"\r\n            style={{ fontSize: \"1.35em\" }}\r\n            type=\"submit\"\r\n            className=\"positive--custom\"\r\n            disabled={!isValid}\r\n          />\r\n          <Button\r\n            type=\"reset\"\r\n            content=\"Cancel\"\r\n            size=\"big\"\r\n            style={{ fontSize: \"1.35em\" }}\r\n            onClick={() => setEditMode(false)}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { Header, Item } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\nimport AddNewButton from \"../../profileItemElements/AddNewItemButton\";\r\nimport ExperienceItemElement from \"../../profileItemElements/ExperienceItemElement\";\r\nimport ExperienceForm from \"../forms/ExperienceForm\";\r\n\r\nexport default observer(function ExperienceSegment() {\r\n  const {\r\n    profileStore: { editedProfile },\r\n  } = useStore();\r\n\r\n  const [editExperienceMode, setEditExperienceMode] = useState(false);\r\n  return (\r\n    <>\r\n      <Header as=\"h1\">Experience</Header>\r\n      {editExperienceMode ? (\r\n        <ExperienceForm setEditMode={setEditExperienceMode} />\r\n      ) : (\r\n        <AddNewButton\r\n          segmentName=\"Experience Item\"\r\n          onClick={() => setEditExperienceMode(true)}\r\n        />\r\n      )}\r\n      <Item.Group>\r\n        {editedProfile &&\r\n          editedProfile.experience.map((experienceItem) => (\r\n            <ExperienceItemElement\r\n              key={experienceItem.id}\r\n              experienceItem={experienceItem}\r\n            />\r\n          ))}\r\n      </Item.Group>\r\n    </>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Card, Image } from \"semantic-ui-react\";\r\nimport { PortfolioItem } from \"../../../app/models/profile\";\r\nimport { Document, Page } from \"react-pdf/dist/umd/entry.webpack\";\r\nimport \"react-pdf/dist/umd/Page/AnnotationLayer.css\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface Props {\r\n  portfolioItem: PortfolioItem;\r\n}\r\n\r\nexport default observer(function PortfolioItemElement({\r\n  portfolioItem,\r\n}: Props) {\r\n  const {\r\n    fileStore: { openFilePreviewModal },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Card style={{ width: \"100%\" }} raised>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"space-around\",\r\n          padding: \"10px\",\r\n        }}\r\n      >\r\n        {portfolioItem.attachments.map((file) => (\r\n          <div key={file.id} className=\"file-thumbnail-container\">\r\n            <Card className=\"file-thumbnail-card\">\r\n              {file.url.startsWith(\"blob\") ? (\r\n                <>\r\n                  {file.resourceType.includes(\"image\") ? (\r\n                    <Image\r\n                      src={file.url}\r\n                      size={\"small\"}\r\n                      style={{ display: \"inline-block\" }}\r\n                    />\r\n                  ) : (\r\n                    <Document file={file.url}>\r\n                      <Page pageNumber={1} width={150} />\r\n                    </Document>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <Image\r\n                  src={\r\n                    file.url.endsWith(\".pdf\")\r\n                      ? file.url.replace(new RegExp(\".pdf$\"), \".png\")\r\n                      : file.url\r\n                  }\r\n                  size={\"small\"}\r\n                  style={{ display: \"inline-block\" }}\r\n                />\r\n              )}\r\n              <div\r\n                className=\"overlay asAButton\"\r\n                onClick={() => openFilePreviewModal(file)}\r\n              ></div>\r\n            </Card>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Card.Header className=\"portfolioItem-nameHeader\" style={{}}>\r\n        {portfolioItem.description}\r\n      </Card.Header>\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\nimport { UserFile } from \"../../../models/profile\";\r\n\r\ninterface Props {\r\n  files: Map<string, UserFile>;\r\n  addFiles: (files: any) => void;\r\n  maxFiles: number;\r\n}\r\n\r\nexport default observer(function FileAddWidgetDropzone({\r\n  files,\r\n  addFiles,\r\n  maxFiles,\r\n}: Props) {\r\n  const dzStyles = {\r\n    border: \"dashed 3px #eee\",\r\n    borderColor: \"#eee\",\r\n    borderRadius: \"5px\",\r\n    paddingTop: \"30px\",\r\n    textAlign: \"center\" as \"center\",\r\n    height: 200,\r\n  };\r\n\r\n  const dzActive = {\r\n    borderColor: \"green\",\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      if (files.size + acceptedFiles.length <= maxFiles)\r\n        addFiles(\r\n          acceptedFiles.map((file: any) =>\r\n            Object.assign(file, {\r\n              preview: URL.createObjectURL(file),\r\n            })\r\n          )\r\n        );\r\n    },\r\n    [addFiles, maxFiles, files.size]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: \"image/jpeg, image/png, application/pdf\",\r\n    maxFiles,\r\n  });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={isDragActive ? { ...dzStyles, ...dzActive } : { ...dzStyles }}\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content={`Drop files here (max. ${maxFiles})`} />\r\n    </div>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport { Card, Checkbox, Grid, Icon, Image } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../stores/store\";\r\nimport { Document, Page } from \"react-pdf/dist/umd/entry.webpack\";\r\nimport \"react-pdf/dist/umd/Page/AnnotationLayer.css\";\r\nimport { runInAction } from \"mobx\";\r\nimport FileAddWidgetDropzone from \"./FileAddWidgetDropzone\";\r\n\r\ninterface Props {\r\n  maxFiles?: number;\r\n}\r\n\r\nexport default observer(function FileAddWidget({ maxFiles = 5 }: Props) {\r\n  const {\r\n    fileStore: { temporaryFiles, addFiles, deleteFiles, openFilePreviewModal, resetState },\r\n  } = useStore();\r\n\r\n  const [deleteMode, setDeleteMode] = useState(0);\r\n  const [filesToDelete, setFilesToDelete] = useState<string[]>([]);\r\n\r\n  function handleDeleteMode(\r\n    e: SyntheticEvent,\r\n    { checked }: any,\r\n    fileId: string\r\n  ) {\r\n    if (checked) {\r\n      setDeleteMode((prevState) => prevState + 1);\r\n      setFilesToDelete((prevArray) => [...prevArray, fileId]);\r\n    } else {\r\n      setDeleteMode((prevState) => prevState - 1);\r\n      setFilesToDelete((prevArray) => prevArray.filter((id) => id !== fileId));\r\n    }\r\n  }\r\n\r\n  function handleDelete() {\r\n    deleteFiles(filesToDelete);\r\n    setDeleteMode(0);\r\n    setFilesToDelete([]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      runInAction(() => {\r\n        Array.from(temporaryFiles.values()).forEach((file: any) =>\r\n          URL.revokeObjectURL(file.url)\r\n        );\r\n      });\r\n      resetState();\r\n    };\r\n  }, [resetState, temporaryFiles]);\r\n\r\n  return (\r\n    <>\r\n      <Grid.Row>\r\n        <Grid.Column width={4}>\r\n          <FileAddWidgetDropzone\r\n            files={temporaryFiles}\r\n            addFiles={addFiles}\r\n            maxFiles={maxFiles}\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={3}>\r\n          {temporaryFiles && temporaryFiles.size > 0 && deleteMode > 0 && (\r\n            <Icon\r\n              size={\"huge\"}\r\n              className=\"asAButton\"\r\n              name={\"trash alternate\"}\r\n              onClick={handleDelete}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column width={16}>\r\n          {temporaryFiles && temporaryFiles.size > 0 && (\r\n            <Card.Group>\r\n              {Array.from(temporaryFiles.entries()).map(([fileId, file]) => {\r\n                return (\r\n                  <div key={fileId} className=\"file-thumbnail-container\">\r\n                    <Card centered className=\"file-thumbnail-card\">\r\n                      <Checkbox\r\n                        style={{\r\n                          zIndex: \"1\",\r\n                          position: \"absolute\",\r\n                          top: \"2px\",\r\n                          right: \"2px\",\r\n                        }}\r\n                        onChange={(e, props) =>\r\n                          handleDeleteMode(e, props, fileId)\r\n                        }\r\n                      />\r\n                      {file.resourceType.startsWith(\"image\") ? (\r\n                        <Image\r\n                          src={file.url}\r\n                          size={\"small\"}\r\n                          style={{ display: \"inline-block\" }}\r\n                        />\r\n                      ) : (\r\n                        <Document file={file.url}>\r\n                          <Page pageNumber={1} width={150} />\r\n                        </Document>\r\n                      )}\r\n                      <div\r\n                        className=\"overlay asAButton\"\r\n                        onClick={() => openFilePreviewModal(file)}\r\n                      ></div>\r\n                    </Card>\r\n                  </div>\r\n                );\r\n              })}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Grid, Input } from \"semantic-ui-react\";\r\nimport FileAddWidget from \"../../../../app/common/fileUpload/add/FileAddWidget\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function PortfolioForm({ setEditMode }: Props) {\r\n  const {\r\n    fileStore: { temporaryFiles, resetState },\r\n    profileStore: { addPortfolioItem },\r\n  } = useStore();\r\n  const [portfolioItemDescription, setPortfolioItemDescription] =\r\n    useState<string>(\"\");\r\n\r\n  function handlePortfolioItemDescriptionChange(\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ) {\r\n    setPortfolioItemDescription(e.target.value);\r\n  }\r\n\r\n  function handleAddPortfolioItem() {\r\n    addPortfolioItem(temporaryFiles, portfolioItemDescription);\r\n    resetState();\r\n    setEditMode(false);\r\n  }\r\n\r\n  return (\r\n    <Grid style={{ margin: \"0\" }}>\r\n      <FileAddWidget />\r\n      <Grid.Row>\r\n        <Input\r\n          placeholder=\"Short description (optional)\"\r\n          size=\"huge\"\r\n          style={{ width: \"100%\" }}\r\n          value={portfolioItemDescription}\r\n          onChange={handlePortfolioItemDescriptionChange}\r\n        />\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Button\r\n          content=\"Add\"\r\n          size=\"big\"\r\n          disabled={temporaryFiles.size < 1}\r\n          className=\"positive--custom becomeExpert-addButton\"\r\n          style={{ fontSize: \"1.35em\" }}\r\n          onClick={handleAddPortfolioItem}\r\n        />\r\n        <Button\r\n          content=\"Cancel\"\r\n          size=\"big\"\r\n          style={{ fontSize: \"1.35em\" }}\r\n          onClick={() => setEditMode(false)}\r\n        />\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\nimport AddNewButton from \"../../profileItemElements/AddNewItemButton\";\r\nimport PortfolioItemElement from \"../../profileItemElements/PortfolioItemElement\";\r\nimport PortfolioForm from \"../forms/PortfolioForm\";\r\n\r\nexport default observer(function PortfolioSegment() {\r\n  const { profileStore: {editedProfile} } = useStore();\r\n\r\n  const [editPortfolioMode, setEditPortfolioMode] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\">Portfolio</Header>\r\n      {editPortfolioMode ? (\r\n        <PortfolioForm setEditMode={setEditPortfolioMode} />\r\n      ) : (\r\n        <AddNewButton\r\n          segmentName=\"Portfolio Item\"\r\n          onClick={() => setEditPortfolioMode(true)}\r\n        />\r\n      )}\r\n      {editedProfile &&\r\n        editedProfile.portfolio.map((portfolioItem) => (\r\n          <PortfolioItemElement\r\n            key={portfolioItem.id}\r\n            portfolioItem={portfolioItem}\r\n          />\r\n        ))}\r\n    </>\r\n  );\r\n});\r\n","import _ from \"lodash\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useCallback, useEffect, useReducer, useRef } from \"react\";\r\nimport { Search, SearchResultData } from \"semantic-ui-react\";\r\nimport { SkillSearchItem, State } from \"../../../app/models/search\";\r\nimport { searchReducer } from \"../../../app/common/util/hooks\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { runInAction } from \"mobx\";\r\n\r\ninterface Props {\r\n  source: SkillSearchItem[];\r\n  loadingSkills: boolean;\r\n  setRemovedSkill: (removedSkill: boolean) => void;\r\n}\r\n\r\nexport default observer(function SkillSearchInput({\r\n  source,\r\n  loadingSkills,\r\n  setRemovedSkill,\r\n}: Props) {\r\n  const {\r\n    profileStore: { profile, addSkill, removeSkill },\r\n    expertStore: { skillRegistry },\r\n  } = useStore();\r\n\r\n  const initialState: State = {\r\n    loading: true,\r\n    results: [],\r\n    value: \"\",\r\n  };\r\n  const [state, searchDispatch] = useReducer(searchReducer, initialState);\r\n  const { loading, results, value } = state;\r\n\r\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timeoutRef.current!);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    searchDispatch({ type: \"FINISH_SEARCH\", results: source });\r\n  }, [source, source.length]);\r\n\r\n  const handleSearchChange = useCallback(\r\n    (e, data) => {\r\n      clearTimeout(timeoutRef.current!);\r\n      searchDispatch({ type: \"START_SEARCH\", query: data.value });\r\n\r\n      timeoutRef.current = setTimeout(() => {\r\n        if (data.value.length === 0) {\r\n          searchDispatch({ type: \"FINISH_SEARCH\", results: source });\r\n        }\r\n\r\n        const re = new RegExp(_.escapeRegExp(data.value), \"i\");\r\n        const isMatch = (result: SkillSearchItem) => re.test(result.title);\r\n\r\n        searchDispatch({\r\n          type: \"FINISH_SEARCH\",\r\n          results: _.filter(source, isMatch),\r\n        });\r\n      }, 100);\r\n    },\r\n    [source]\r\n  );\r\n  const handleResultSelect = (e: any, data: SearchResultData) => {\r\n    searchDispatch({\r\n      type: \"UPDATE_SELECTION\",\r\n      selection: data.result.title,\r\n    });\r\n    const selectedSkill = Array.from(skillRegistry.values()).find(\r\n      (skill) => skill.name === data.result.title\r\n    );\r\n    if (profile && selectedSkill)\r\n      if (profile.skills.includes(selectedSkill)) {\r\n        removeSkill(selectedSkill);\r\n        runInAction(() => source.push(data.result));\r\n      } else {\r\n        addSkill(selectedSkill);\r\n        runInAction(() => source.splice(source.indexOf(data.result), 1));\r\n      }\r\n\r\n    searchDispatch({\r\n      type: \"CLEAN_QUERY\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Search\r\n      loading={loading || loadingSkills}\r\n      onResultSelect={(e, data) => handleResultSelect(e, data)}\r\n      onSearchChange={handleSearchChange}\r\n      onMouseDown={handleSearchChange}\r\n      results={results}\r\n      value={value}\r\n      minCharacters={0}\r\n      selectFirstResult\r\n      onBlur={() => setRemovedSkill(true)}\r\n    />\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Header, Label, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\nimport SkillSearchInput from \"../SkillSearchInput\";\r\n\r\nexport default observer(function SkillsSegment() {\r\n  const { expertStore, profileStore } = useStore();\r\n  const [removedSkill, setRemovedSkill] = useState(false);\r\n\r\n  const {\r\n    loadAllSkills,\r\n    skillNames,\r\n    skillRegistry,\r\n    getSkillNames,\r\n    loadingSkills,\r\n  } = expertStore;\r\n\r\n  const { editedProfile, removeSkill } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadAllSkills().then(getSkillNames);\r\n  }, [getSkillNames, loadAllSkills]);\r\n\r\n  useEffect(() => {\r\n    if (skillRegistry.size < 1 || skillNames.length < 1)\r\n      loadAllSkills().then(getSkillNames);\r\n  }, [getSkillNames, loadAllSkills, skillNames.length, skillRegistry.size]);\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\">Skills</Header>\r\n      <Segment\r\n        style={{ marginBottom: \"2.5em\", minHeight: \"6em\" }}\r\n        className={\r\n          editedProfile?.skills.length === 0 && removedSkill\r\n            ? \"becomeExpert-skillsSegment__noSkills\"\r\n            : \"\"\r\n        }\r\n      >\r\n        {editedProfile &&\r\n          editedProfile.skills.map((skill) => (\r\n            <Label\r\n              className=\"becomeExpert--skillLabel__hover asAButton\"\r\n              onClick={() => {\r\n                removeSkill(skill);\r\n                setRemovedSkill(true);\r\n              }}\r\n              key={skill.id}\r\n            >\r\n              {skill.name}\r\n            </Label>\r\n          ))}\r\n        {editedProfile?.skills.length === 0 && removedSkill && (\r\n          <Label\r\n            style={{ position: \"absolute\", zIndex: 2, top: \"110%\", left: \"0\" }}\r\n            content=\"You must select at least one skill\"\r\n            basic\r\n            color=\"red\"\r\n          />\r\n        )}\r\n      </Segment>\r\n      <SkillSearchInput\r\n        source={skillNames}\r\n        loadingSkills={loadingSkills}\r\n        setRemovedSkill={setRemovedSkill}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Button, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport AccountLinksSegment from \"../becomeExpertForm/segments/AccountLinksSegment\";\r\nimport CertificationSegment from \"../becomeExpertForm/segments/CertificationSegment\";\r\nimport EducationSegment from \"../becomeExpertForm/segments/EducationSegment\";\r\nimport EmploymentSegment from \"../becomeExpertForm/segments/EmploymentSegment\";\r\nimport ExperienceSegment from \"../becomeExpertForm/segments/ExperienceSegment\";\r\nimport PortfolioSegment from \"../becomeExpertForm/segments/PortfolioSegment\";\r\nimport SkillsSegment from \"../becomeExpertForm/segments/SkillsSegment\";\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function EditProfile({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: {\r\n      loading,\r\n      uploading,\r\n      editedProfile,\r\n      updateProfile,\r\n      updatingProfile,\r\n      startProfileEditing,\r\n    },\r\n  } = useStore();\r\n\r\n  function handleSaveChanges() {\r\n    updateProfile(editedProfile!).then(() => {\r\n      setEditMode(false);\r\n      window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    startProfileEditing();\r\n  }, [startProfileEditing]);\r\n\r\n  return (\r\n    <>\r\n      <Segment>\r\n        <AccountLinksSegment />\r\n      </Segment>\r\n      <Segment.Group>\r\n        <Segment\r\n          style={{ paddingBottom: \"4rem\" }}\r\n          className=\"editProfile-container\"\r\n        >\r\n          <div style={{ display: 'flex', float: \"right\", marginRight: \"1rem\" }}>\r\n            <Button\r\n              content=\"Cancel\"\r\n              style={{ marginRight: \"15px\" }}\r\n              onClick={() => {\r\n                setEditMode(false);\r\n                window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\r\n              }}\r\n            />\r\n            <div\r\n              className=\"becomeExpert-progressButton\"\r\n              onClick={() => {\r\n                if (editedProfile?.skills.length === 0)\r\n                  window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\r\n              }}\r\n            >\r\n              <Button\r\n                content=\"Save Changes\"\r\n                className=\"positive--custom\"\r\n                size=\"large\"\r\n                onClick={handleSaveChanges}\r\n                disabled={editedProfile?.skills.length === 0}\r\n                loading={loading || uploading || updatingProfile}\r\n              />\r\n            </div>\r\n          </div>\r\n          <SkillsSegment />\r\n          <PortfolioSegment />\r\n          <EmploymentSegment />\r\n          <ExperienceSegment />\r\n          <EducationSegment />\r\n          <CertificationSegment />\r\n          <div style={{ display: 'flex', float: \"right\", marginRight: \"1rem\" }}>\r\n            <Button\r\n              content=\"Cancel\"\r\n              style={{ marginRight: \"15px\" }}\r\n              onClick={() => {\r\n                setEditMode(false);\r\n                window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\r\n              }}\r\n            />\r\n            <div\r\n              className=\"becomeExpert-progressButton\"\r\n              onClick={() => {\r\n                if (editedProfile?.skills.length === 0)\r\n                  window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\r\n              }}\r\n            >\r\n              <Button\r\n                content=\"Save Changes\"\r\n                className=\"positive--custom\"\r\n                size=\"large\"\r\n                onClick={handleSaveChanges}\r\n                disabled={editedProfile?.skills.length === 0}\r\n                loading={loading || uploading || updatingProfile}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Segment>\r\n      </Segment.Group>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Header, Item } from \"semantic-ui-react\";\r\nimport { Certification } from \"../../../app/models/profile\";\r\nimport CertificationElement from \"../profileItemElements/CertificationElement\";\r\n\r\ninterface Props {\r\n  certification: Certification[];\r\n}\r\n\r\nexport default observer(function ProfileCertification({\r\n  certification,\r\n}: Props) {\r\n  return (\r\n    <>\r\n      <Header as=\"h1\">Certification</Header>\r\n      {certification && (\r\n        <Item.Group>\r\n          {certification.map((certificate) => (\r\n            <CertificationElement\r\n              key={certificate.id}\r\n              certificate={certificate}\r\n            />\r\n          ))}\r\n        </Item.Group>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Header, Item } from \"semantic-ui-react\";\r\nimport { EducationItem } from \"../../../app/models/profile\";\r\nimport EducationItemElement from \"../profileItemElements/EducationItemElement\";\r\n\r\ninterface Props {\r\n  education: EducationItem[];\r\n}\r\n\r\nexport default observer(function ProfileEducation({ education }: Props) {\r\n  return (\r\n    <>\r\n      <Header as=\"h1\">Education</Header>\r\n      {education && (\r\n        <Item.Group>\r\n          {education.map((educationItem) => (\r\n            <EducationItemElement\r\n              key={educationItem.id}\r\n              educationItem={educationItem}\r\n            />\r\n          ))}\r\n        </Item.Group>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Header, Item } from \"semantic-ui-react\";\r\nimport { EmploymentItem } from \"../../../app/models/profile\";\r\nimport EmploymentItemElement from \"../profileItemElements/EmploymentItemElement\";\r\n\r\ninterface Props {\r\n  employment: EmploymentItem[];\r\n}\r\n\r\nexport default observer(function ProfileEmployment({ employment }: Props) {\r\n  return (\r\n    <>\r\n      <Header as=\"h1\">Employment</Header>\r\n      {employment && (\r\n        <Item.Group>\r\n          {employment.map((employmentItem) => (\r\n            <EmploymentItemElement\r\n              key={employmentItem.id}\r\n              employmentItem={employmentItem}\r\n            />\r\n          ))}\r\n        </Item.Group>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Header, Item } from \"semantic-ui-react\";\r\nimport { ExperienceItem } from \"../../../app/models/profile\";\r\nimport ExperienceItemElement from \"../profileItemElements/ExperienceItemElement\";\r\n\r\ninterface Props {\r\n  experience: ExperienceItem[];\r\n}\r\n\r\nexport default observer(function ProfileExperience({ experience }: Props) {\r\n  return (\r\n    <>\r\n      <Header as=\"h1\">Experience</Header>\r\n      {experience && (\r\n        <Item.Group>\r\n          {experience.map((experienceItem) => (\r\n            <ExperienceItemElement key={experienceItem.id} experienceItem={experienceItem} />\r\n          ))}\r\n        </Item.Group>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { PortfolioItem } from \"../../../app/models/profile\";\r\nimport PortfolioItemElement from \"../profileItemElements/PortfolioItemElement\";\r\n\r\ninterface Props {\r\n  portfolio: PortfolioItem[];\r\n}\r\n\r\nexport default observer(function ProfilePortfolio({ portfolio }: Props) {\r\n  return (\r\n    <>\r\n      <Header as=\"h1\">Portfolio</Header>\r\n      {portfolio.map((portfolioItem) => (\r\n        <PortfolioItemElement\r\n          key={portfolioItem.id}\r\n          portfolioItem={portfolioItem}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport EditProfile from \"./EditProfile\";\r\nimport ProfileCertification from \"./ProfileCertification\";\r\nimport ProfileEducation from \"./ProfileEducation\";\r\nimport ProfileEmployment from \"./ProfileEmployment\";\r\nimport ProfileExperience from \"./ProfileExperience\";\r\nimport ProfilePortfolio from \"./ProfilePortfolio\";\r\n\r\nexport default observer(function ProfileContent() {\r\n  const {\r\n    profileStore: { profile, isCurrentUser },\r\n  } = useStore();\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  return (\r\n    <>\r\n      {!editMode ? (\r\n        <>\r\n          {profile && !profile.isExpert && (\r\n            <Button\r\n              as={Link}\r\n              to=\"/becomeExpert\"\r\n              content=\"Become an expert\"\r\n              inverted\r\n              className=\"positive--custom--inverted\"\r\n              size=\"massive\"\r\n              style={{\r\n                width: '100%'\r\n              }}\r\n            />\r\n          )}\r\n          {profile && profile.isExpert && (\r\n            <Segment.Group className=\"profileContent-container\">\r\n              <Segment>\r\n                <>\r\n                  {profile.portfolio && profile.portfolio.length > 0 && (\r\n                    <ProfilePortfolio portfolio={profile.portfolio} />\r\n                  )}\r\n                  {profile.employment && profile.employment.length > 0 && (\r\n                    <ProfileEmployment employment={profile.employment} />\r\n                  )}\r\n                  {profile.education && profile.education.length > 0 && (\r\n                    <ProfileEducation education={profile.education} />\r\n                  )}\r\n                  {profile.experience && profile.experience.length > 0 && (\r\n                    <ProfileExperience experience={profile.experience} />\r\n                  )}\r\n                  {profile.certifications &&\r\n                    profile.certifications.length > 0 && (\r\n                      <ProfileCertification\r\n                        certification={profile.certifications}\r\n                      />\r\n                    )}\r\n                  {isCurrentUser && (\r\n                    <Button\r\n                      content=\"Edit Profile\"\r\n                      style={{ position: \"absolute\", top: \"5px\", right: \"5px\" }}\r\n                      onClick={() => setEditMode(true)}\r\n                      className=\"positive--custom--inverted\"\r\n                    />\r\n                  )}\r\n                </>\r\n              </Segment>\r\n            </Segment.Group>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <EditProfile setEditMode={setEditMode} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Cropper } from \"react-cropper\";\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({\r\n  imagePreview,\r\n  setCropper,\r\n}: Props) {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: \"100%\" }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview=\".img-preview\"\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={(cropper) => setCropper(cropper)}\r\n    />\r\n  );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\r\n  const dzStyles = {\r\n    border: \"dashed 3px #eee\",\r\n    borderColor: \"#eee\",\r\n    borderRadius: \"5px\",\r\n    paddingTop: \"30px\",\r\n    textAlign: \"center\" as \"center\",\r\n    height: 200,\r\n  };\r\n\r\n  const dzActive = {\r\n    borderColor: \"green\",\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file: any) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Cropper } from \"react-cropper\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props {\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default observer(function PhotoUploadWidget({ uploadPhoto }: Props) {\r\n  const {\r\n    profileStore: { loading, uploading },\r\n  } = useStore();\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  }, [files]);\r\n\r\n  useEffect(() => {\r\n    setLoader(loading || uploading);\r\n  }, [loading, uploading]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n        <PhotoWidgetDropzone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize Image\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper\r\n            setCropper={setCropper}\r\n            imagePreview={files[0].preview}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div\r\n              className=\"img-preview\"\r\n              style={{ minHeight: 200, overflow: \"hidden\" }}\r\n            />\r\n            <Button\r\n              loading={loader}\r\n              onClick={onCrop}\r\n              positive\r\n              icon=\"check\"\r\n              style={{ width: \"200px\" }}\r\n              attached=\"bottom\"\r\n            />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../layout/LoadingComponent\";\r\nimport { useStore } from \"../../../stores/store\";\r\n\r\ninterface Props {\r\n  uploadFile: (file: any) => void;\r\n}\r\n\r\nexport default observer(function FileUploadWidgetDropzone({\r\n  uploadFile,\r\n}: Props) {\r\n  const {\r\n    profileStore: { uploading },\r\n  } = useStore();\r\n\r\n  const dzStyles = {\r\n    border: \"dashed 3px #eee\",\r\n    borderColor: \"#eee\",\r\n    borderRadius: \"5px\",\r\n    padding: \"0.7em 0.7em 0.1em 0.7em\",\r\n    textAlign: \"center\" as \"center\",\r\n    height: '9em',\r\n  };\r\n  const dzActive = {\r\n    borderColor: \"green\",\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const file = Object.assign(acceptedFiles[0], {\r\n        preview: URL.createObjectURL(acceptedFiles[0]),\r\n      });\r\n      uploadFile(file);\r\n    },\r\n    [uploadFile]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: \"image/jpeg, image/png, application/pdf\",\r\n    maxFiles: 1,\r\n  });\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={isDragActive ? { ...dzStyles, ...dzActive } : { ...dzStyles }}\r\n    >\r\n      <input {...getInputProps()} />\r\n      {!uploading ? (\r\n        <>\r\n          <Icon name=\"upload\" size=\"big\" />\r\n          <Header content={`Drop files here \\n(max. 1)`} />\r\n        </>\r\n      ) : (\r\n        <LoadingComponent />\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { UserFile } from \"../../../models/profile\";\r\nimport FileUploadWidgetDropzone from \"./FileUploadWidgetDropzone\";\r\n\r\ninterface Props {\r\n  uploadFile: (file: UserFile) => void;\r\n  maxFiles?: number;\r\n}\r\n\r\nexport default function FileUploadWidget({ uploadFile, maxFiles = 5 }: Props) {\r\n  return (\r\n    <>\r\n      <FileUploadWidgetDropzone uploadFile={uploadFile} />\r\n    </>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Image } from \"semantic-ui-react\";\r\nimport FileUploadWidget from \"../../../app/common/fileUpload/upload/FileUploadWidget\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ProfileCV() {\r\n  const {\r\n    profileStore: { isCurrentUser, profile, addCV },\r\n    fileStore: { openFilePreviewModal },\r\n  } = useStore();\r\n\r\n  const [addCVMode, setAddCVMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n      if (profile && profile.cv) {\r\n        setAddCVMode(false);\r\n      }\r\n    }, [profile, profile?.cv]);\r\n\r\n  return (\r\n    <>\r\n      {!isCurrentUser && profile && profile.cv && (\r\n        <div className=\"file-thumbnail-container\" style={{ float: \"right\" }}>\r\n          <Card className=\"file-thumbnail-card\">\r\n            <Image\r\n              src={\r\n                profile.cv.url.endsWith(\".pdf\")\r\n                  ? profile.cv.url.slice().replace(new RegExp(\".pdf$\"), \".png\")\r\n                  : profile.cv.url\r\n              }\r\n              size={\"small\"}\r\n              style={{ display: \"inline-block\" }}\r\n            />\r\n            <div\r\n              className=\"overlay asAButton\"\r\n              onClick={() => openFilePreviewModal(profile.cv)}\r\n            ></div>\r\n          </Card>\r\n        </div>\r\n      )}\r\n      {isCurrentUser &&\r\n        profile &&\r\n        (profile.cv ? (\r\n          <>\r\n            {!addCVMode ? (\r\n              <>\r\n                <Button\r\n                  className=\"positive--custom--inverted\"\r\n                  content=\"Change CV\"\r\n                  onClick={() => setAddCVMode(true)}\r\n                  floated=\"right\"\r\n                  style={{ marginBottom: \"1.2em\" }}\r\n                />\r\n                <div\r\n                  className=\"file-thumbnail-container\"\r\n                  style={{ float: \"right\" }}\r\n                >\r\n                  <Card className=\"file-thumbnail-card\">\r\n                    <Image\r\n                      src={\r\n                        profile.cv.url.endsWith(\".pdf\")\r\n                          ? profile.cv.url\r\n                              .slice()\r\n                              .replace(new RegExp(\".pdf$\"), \".png\")\r\n                          : profile.cv.url\r\n                      }\r\n                      size={\"small\"}\r\n                      style={{ display: \"inline-block\" }}\r\n                    />\r\n                    <div\r\n                      className=\"overlay asAButton\"\r\n                      onClick={() => openFilePreviewModal(profile.cv)}\r\n                    ></div>\r\n                  </Card>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  content=\"Cancel\"\r\n                  onClick={() => setAddCVMode(false)}\r\n                  floated=\"right\"\r\n                  className=\"positive--custom--inverted\"\r\n                  style={{ marginBottom: \"1.2em\" }}\r\n                />\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    width: \"100%\",\r\n                    maxWidth: \"100%\",\r\n                  }}\r\n                >\r\n                  <FileUploadWidget uploadFile={addCV} />\r\n                </div>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {!addCVMode ? (\r\n              <Button\r\n                className=\"positive--custom--inverted\"\r\n                content=\"Add CV\"\r\n                onClick={() => setAddCVMode(true)}\r\n                floated=\"right\"\r\n                style={{ marginBottom: \"1.2em\" }}\r\n              />\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  className=\"positive--custom--inverted\"\r\n                  content=\"Cancel\"\r\n                  onClick={() => setAddCVMode(false)}\r\n                  floated=\"right\"\r\n                  style={{ marginBottom: \"1.2em\" }}\r\n                />\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    width: \"100%\",\r\n                    maxWidth: \"100%\",\r\n                  }}\r\n                >\r\n                  <FileUploadWidget uploadFile={addCV} />\r\n                </div>\r\n              </>\r\n            )}\r\n          </>\r\n        ))}\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Item,\r\n  Segment,\r\n  Transition,\r\n  Image,\r\n  Label,\r\n  Icon,\r\n  Menu,\r\n} from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport ProfileCV from \"./ProfileCV\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ProfileHeader() {\r\n  const {\r\n    modalStore,\r\n    profileStore: { uploadProfilePhoto, isCurrentUser, profile },\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  function handlePhotoChange(file: Blob) {\r\n    if (isLoggedIn()) {\r\n      uploadProfilePhoto(file);\r\n    } else {\r\n      modalStore.closeModal();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Segment>\r\n      {profile && (\r\n        <Grid>\r\n          <Grid.Column width=\"10\">\r\n            <Item.Group>\r\n              <Item>\r\n                <Item.Image\r\n                  size=\"small\"\r\n                  onMouseEnter={() => setVisible(true)}\r\n                  onMouseLeave={() => setVisible(false)}\r\n                >\r\n                  <Image\r\n                    src={profile.photo?.url || \"/assets/user.png\"}\r\n                    style={{\r\n                      border: \"1px solid #eaeaea\",\r\n                    }}\r\n                  />\r\n                  {isCurrentUser && (\r\n                    <Transition visible={visible}>\r\n                      <Button\r\n                        className=\"profile-image--icon\"\r\n                        icon=\"edit\"\r\n                        onClick={() => {\r\n                          modalStore.openModal(\r\n                            <PhotoUploadWidget\r\n                              uploadPhoto={handlePhotoChange}\r\n                            />,\r\n                            \"large\"\r\n                          );\r\n                        }}\r\n                      />\r\n                    </Transition>\r\n                  )}\r\n                </Item.Image>\r\n                <Item.Content>\r\n                  <Item.Header as=\"h1\" content={profile.displayName} />\r\n                  <Item.Extra className=\"profileSkills-skillContainer\">\r\n                    {profile.skills.map((skill) => (\r\n                      <Label\r\n                        key={skill.id}\r\n                        content={skill.name}\r\n                        className=\"profileSkills-skillLabel\"\r\n                      />\r\n                    ))}\r\n                  </Item.Extra>\r\n                  <Item.Description>{profile.bio}</Item.Description>\r\n                </Item.Content>\r\n              </Item>\r\n            </Item.Group>\r\n          </Grid.Column>\r\n          <Grid.Column width=\"2\">\r\n            {profile.githubProfileUrl && (\r\n              <Menu.Item href={profile.githubProfileUrl} target=\"_blank\">\r\n                <Icon name=\"github\" size=\"big\" link style={{ color: \"#000\" }} />\r\n              </Menu.Item>\r\n            )}\r\n            {profile.linkedInProfileUrl && (\r\n              <Menu.Item href={profile.linkedInProfileUrl} target=\"_blank\">\r\n                <Icon\r\n                  name=\"linkedin\"\r\n                  size=\"big\"\r\n                  link\r\n                  style={{ color: \"#0077b5\" }}\r\n                />\r\n              </Menu.Item>\r\n            )}\r\n          </Grid.Column>\r\n          <Grid.Column width=\"1\" />\r\n          <Grid.Column width=\"3\">\r\n            <ProfileCV  />\r\n          </Grid.Column>\r\n        </Grid>\r\n      )}\r\n    </Segment>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer(function ProfilePage() {\r\n  const { userName } = useParams<{ userName: string }>();\r\n  const {\r\n    profileStore: { loadingProfile, loadProfile, profile, resetState },\r\n  } = useStore();\r\n\r\n  useEffect(() => {\r\n    resetState();\r\n    loadProfile(userName);\r\n  }, [loadProfile, resetState, userName]);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Profile - MatchIT\";\r\n    if (profile?.displayName) {\r\n      document.title = `${profile?.displayName}'s Profile - MatchIT`;\r\n    }\r\n  }, [profile?.displayName]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"16\">\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader />\r\n            <ProfileContent />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  GridColumn,\r\n  Segment,\r\n  Step,\r\n  Transition,\r\n} from \"semantic-ui-react\";\r\nimport { history } from \"../../..\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport CertificationSegment from \"./segments/CertificationSegment\";\r\nimport EducationSegment from \"./segments/EducationSegment\";\r\nimport EmploymentSegment from \"./segments/EmploymentSegment\";\r\nimport ExperienceSegment from \"./segments/ExperienceSegment\";\r\nimport PortfolioSegment from \"./segments/PortfolioSegment\";\r\nimport SkillsSegment from \"./segments/SkillsSegment\";\r\n\r\nexport default observer(function BecomeExpert() {\r\n  const {\r\n    profileStore,\r\n    userStore: { user },\r\n  } = useStore();\r\n\r\n  const {\r\n    editedProfile,\r\n    loadProfile,\r\n    updateProfile,\r\n    loading,\r\n    uploading,\r\n    loadingProfile,\r\n    startProfileEditing,\r\n    updatingProfile,\r\n  } = profileStore;\r\n\r\n  const skillsRef = useRef<HTMLDivElement>(null);\r\n  const portfolioRef = useRef<HTMLDivElement>(null);\r\n  const employmentRef = useRef<HTMLDivElement>(null);\r\n  const experienceRef = useRef<HTMLDivElement>(null);\r\n  const educationRef = useRef<HTMLDivElement>(null);\r\n  const certificationRef = useRef<HTMLDivElement>(null);\r\n\r\n  const refs = [\r\n    skillsRef,\r\n    portfolioRef,\r\n    employmentRef,\r\n    experienceRef,\r\n    educationRef,\r\n    certificationRef,\r\n  ];\r\n  const forms = [\r\n    <SkillsSegment />,\r\n    <PortfolioSegment />,\r\n    <EmploymentSegment />,\r\n    <ExperienceSegment />,\r\n    <EducationSegment />,\r\n    <CertificationSegment />,\r\n  ];\r\n\r\n  const [formRow, setFormRow] = useState(forms.slice(0, 1));\r\n  const [activeStep, setActiveStep] = useState(1);\r\n  const [buttonState, setButtonState] = useState(false);\r\n\r\n  function handleNext() {\r\n    setFormRow((prev) => {\r\n      return forms.slice(0, prev.length + 1);\r\n    });\r\n    setActiveStep(formRow.length + 1);\r\n    setTimeout(() => {\r\n      refs[activeStep].current!.scrollIntoView({ behavior: \"smooth\" });\r\n    }, 10);\r\n  }\r\n\r\n  function handleSaveChanges() {\r\n    updateProfile(editedProfile!).then(() =>\r\n      history.push(`/profiles/${editedProfile!.userName}`)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = \"Become Expert - MatchIT\";\r\n    if (user) {\r\n      loadProfile(user.userName).then(() => startProfileEditing());\r\n    }\r\n  }, [user, loadProfile, startProfileEditing]);\r\n\r\n  useEffect(() => {\r\n    setButtonState(false);\r\n    if (editedProfile) {\r\n      switch (activeStep) {\r\n        case 1:\r\n          setButtonState(editedProfile.skills.length > 0);\r\n          // setButtonState(true);\r\n          break;\r\n        case 2:\r\n          // setButtonState(profile.portfolio.length > 0);\r\n          setButtonState(true);\r\n          break;\r\n        case 3:\r\n          // setButtonState(profile.employment.length > 0);\r\n          setButtonState(true);\r\n          break;\r\n        case 4:\r\n          // setButtonState(profile.experience.length > 0);\r\n          setButtonState(true);\r\n          break;\r\n        case 5:\r\n          // setButtonState(profile.education.length > 0);\r\n          setButtonState(true);\r\n          break;\r\n        case 6:\r\n          // setButtonState(profile.certifications.length > 0);\r\n          setButtonState(true);\r\n          break;\r\n      }\r\n    }\r\n  }, [activeStep, editedProfile, editedProfile?.skills.length]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"2\">\r\n        <Step.Group vertical style={{ position: \"fixed\" }}>\r\n          <Step active={activeStep === 1}>\r\n            <Step.Content>Skills</Step.Content>\r\n          </Step>\r\n          <Step active={activeStep === 2}>\r\n            <Step.Content>Portfolio</Step.Content>\r\n          </Step>\r\n          <Step active={activeStep === 3}>\r\n            <Step.Content>Employment</Step.Content>\r\n          </Step>\r\n          <Step active={activeStep === 4}>\r\n            <Step.Content>Experience</Step.Content>\r\n          </Step>\r\n          <Step active={activeStep === 5}>\r\n            <Step.Content>Education</Step.Content>\r\n          </Step>\r\n          <Step active={activeStep === 6}>\r\n            <Step.Content>Certification</Step.Content>\r\n          </Step>\r\n        </Step.Group>\r\n      </Grid.Column>\r\n      <GridColumn width=\"1\" />\r\n      <Grid.Column width=\"13\">\r\n        <Segment>\r\n          <Transition.Group\r\n            as={Grid}\r\n            divided\r\n            size=\"huge\"\r\n            verticalAlign=\"middle\"\r\n            style={{ marginBottom: \"2em\", padding: '1em 2em' }}\r\n          >\r\n            {formRow.map((item, index) => (\r\n              <Grid.Row key={index}>\r\n                <div ref={refs[index]}>{item}</div>\r\n              </Grid.Row>\r\n            ))}\r\n          </Transition.Group>\r\n          <Button.Group style={{ position: 'absolute', bottom: '10px', right: '30px' }}>\r\n            {forms.length > activeStep ? (\r\n              <Button\r\n                onClick={handleNext}\r\n                className=\"becomeExpert-progressButton\"\r\n                content=\"Next Step\"\r\n                size=\"large\"\r\n                disabled={!buttonState}\r\n              />\r\n            ) : (\r\n              <div\r\n                className=\"becomeExpert-progressButton\"\r\n                onClick={() => {\r\n                  if (editedProfile?.skills.length === 0)\r\n                    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\r\n                }}\r\n              >\r\n                <Button\r\n                  content=\"Save Changes\"\r\n                  className=\"positive--custom\"\r\n                  size=\"large\"\r\n                  onClick={handleSaveChanges}\r\n                  disabled={editedProfile?.skills.length === 0}\r\n                  loading={loading || uploading || updatingProfile}\r\n                />\r\n              </div>\r\n            )}\r\n          </Button.Group>\r\n        </Segment>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Image, Label, Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\nimport { Document, Page } from \"react-pdf/dist/umd/entry.webpack\";\r\n\r\nexport default observer(function FilePreviewModal() {\r\n  const { fileStore } = useStore();\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  function onDocumentLoadSuccess({ numPages }: any) {\r\n    setNumPages(numPages);\r\n  }\r\n\r\n  function handlePrevPage() {\r\n    if (pageNumber !== 1) setPageNumber((prevValue) => prevValue - 1);\r\n  }\r\n\r\n  function handleNextPage() {\r\n    setPageNumber((prevValue) => prevValue + 1);\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      className=\"modal-file-preview\"\r\n      open={fileStore.modal.open}\r\n      onClose={() => {\r\n        fileStore.closeFileModal();\r\n        setPageNumber(1);\r\n      }}\r\n      closeIcon\r\n      // size={fileStore.modal.size}\r\n    >\r\n      <Modal.Content>\r\n        {fileStore.modal.file ? (\r\n          fileStore.modal.file.resourceType.startsWith(\"image\") ? (\r\n            <Image src={fileStore.modal.file.url} size=\"huge\" />\r\n          ) : (\r\n            <Document\r\n              file={fileStore.modal.file.url}\r\n              onLoadSuccess={onDocumentLoadSuccess}\r\n            >\r\n              <Page pageNumber={pageNumber} />\r\n              <Button.Group\r\n                className=\"pdfNavigation-buttons\"\r\n                style={{ boxShadow: \" 0 30px 40px 0 rgba(16, 36, 94, 0.2)\" }}\r\n              >\r\n                <Button\r\n                  icon=\"chevron left\"\r\n                  onClick={handlePrevPage}\r\n                  className={pageNumber === 1 ? \"disabled\" : \"\"}\r\n                />\r\n                <Label\r\n                  style={{ margin: 0, cursor: \"default\" }}\r\n                  content={`${pageNumber} of ${numPages}`}\r\n                />\r\n                <Button\r\n                  icon=\"chevron right\"\r\n                  onClick={handleNextPage}\r\n                  className={pageNumber === numPages ? \"disabled\" : \"\"}\r\n                />\r\n              </Button.Group>\r\n            </Document>\r\n          )\r\n        ) : (\r\n          fileStore.modal.body\r\n        )}\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Button, Header, Menu } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function JobFilters() {\r\n  const {\r\n    jobStore: {\r\n      skillPredicate,\r\n      setSkillPredicate,\r\n      loadRequiredSkills,\r\n      skillRegistry,\r\n      skillFilter,\r\n      filterDelay,\r\n      clearFilter,\r\n      loadingSkills,\r\n    },\r\n  } = useStore();\r\n\r\n  useEffect(() => {\r\n    loadRequiredSkills();\r\n  }, [loadRequiredSkills]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, [skillFilter.length]);\r\n\r\n  return (\r\n    <>\r\n      <Menu\r\n        vertical\r\n        size=\"large\"\r\n        style={{\r\n          width: \"100%\",\r\n          marginTop: 25,\r\n        }}\r\n      >\r\n        <Header\r\n          icon=\"filter\"\r\n          attached\r\n          color=\"teal\"\r\n          content=\"Filters\"\r\n          style={{\r\n            display: \"inline-block\",\r\n            border: \"none\",\r\n            margin: \"5px 2px 0px 2px\",\r\n          }}\r\n        />\r\n        <Button\r\n          disabled={skillFilter.length === 0}\r\n          compact\r\n          basic\r\n          icon=\"ban\"\r\n          content=\"Clear\"\r\n          size=\"medium\"\r\n          floated=\"right\"\r\n          negative\r\n          style={{\r\n            textAlign: \"center\",\r\n            marginTop: \"11px\",\r\n            marginRight: \"5px\",\r\n          }}\r\n          onClick={() => clearFilter()}\r\n        />\r\n        {loadingSkills ? (\r\n          <Menu.Item style={{ minHeight: \"15em\" }}>\r\n            <LoadingComponent content=\"Loading...\" />\r\n          </Menu.Item>\r\n        ) : (\r\n          <div style={{ maxHeight: \"20em\", overflowY: \"auto\" }}>\r\n            {Array.from(skillRegistry)\r\n              .sort(\r\n                ([_, s1], [__, s2]) =>\r\n                  s2.count - s1.count || s1.name.localeCompare(s2.name)\r\n              )\r\n              .map(([id, skill]) => (\r\n                <Menu.Item\r\n                  key={id}\r\n                  content={`${skill.name} (${skill.count})`}\r\n                  active={Array.from(skillPredicate.values())[0]\r\n                    .split(\",\")\r\n                    .includes(skill.name)}\r\n                  disabled={\r\n                    skill.count === 0 &&\r\n                    !Array.from(skillPredicate.values())[0]\r\n                      .split(\",\")\r\n                      .includes(skill.name)\r\n                  }\r\n                  onClick={() => {\r\n                    clearTimeout(filterDelay);\r\n                    setSkillPredicate(skill.name);\r\n                  }}\r\n                />\r\n              ))}\r\n          </div>\r\n        )}\r\n      </Menu>\r\n    </>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Header, Image, Item, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../models/profile\";\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default function ProfilePopup({profile}: Props) {\r\n    return (\r\n        <Popup\r\n                  header={\r\n                    <Header>\r\n                      <Image\r\n                        avatar\r\n                        src={profile.photo?.url || \"/assets/user.png\"}\r\n                      />\r\n                      <Header\r\n                        style={{ marginLeft: \"4px\", display: \"inline\" }}\r\n                      >\r\n                        {profile.displayName}\r\n                      </Header>\r\n                    </Header>\r\n                  }\r\n                  // content={\r\n                  //   <UserRating\r\n                  //     rating={profile.rating}\r\n                  //     disabled\r\n                  //   />\r\n                  // }\r\n                  hoverable\r\n                  trigger={\r\n                    <Item.Header as=\"h4\" style={{ display: \"inline\" }}>\r\n                      <Link to={`/profiles/${profile.userName}`}>\r\n                        {profile.displayName}\r\n                      </Link>\r\n                    </Item.Header>\r\n                  }\r\n                ></Popup>\r\n    )\r\n}","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Item, Segment } from \"semantic-ui-react\";\r\nimport ProfilePopup from \"../../../app/common/profile/ProfilePopup\";\r\nimport { Job } from \"../../../app/models/job\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\ninterface Props {\r\n  job: Job;\r\n}\r\n\r\nexport default observer(function JobListItem({ job }: Props) {\r\n  const {\r\n    jobStore: { setSkillPredicate, skillPredicate },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/jobs/${job.id}`}>\r\n                {job.title}\r\n              </Item.Header>\r\n              <Item.Meta>\r\n                <ProfilePopup profile={job.employer} />\r\n              </Item.Meta>\r\n              <Item.Meta>\r\n                {`Posted on: ${format(\r\n                  new Date(job.creationTime),\r\n                  \"dd-MM-yyyy\"\r\n                )}`}\r\n              </Item.Meta>\r\n              <Item.Description>{job.description}</Item.Description>\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment className=\"skillList-container\">\r\n        {job.requiredSkills.map((skill) => (\r\n          <Button\r\n            className=\"skillList-skillButton\"\r\n            as={Link}\r\n            to={`/jobs`}\r\n            key={skill.id}\r\n            content={skill.name}\r\n            disabled={Array.from(skillPredicate.values())[0]\r\n              .split(\",\")\r\n              .includes(skill.name)}\r\n            onClick={() => {\r\n              setSkillPredicate(skill.name);\r\n            }}\r\n          />\r\n        ))}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Job } from \"../../../app/models/job\";\r\nimport JobListItem from \"./JobListItem\";\r\n\r\ninterface Props {\r\n  jobArray: Job[];\r\n}\r\n\r\nexport default observer(function JobList ({jobArray}: Props) {\r\n \r\n  return (\r\n    <>\r\n      {jobArray.map((job) => (\r\n        <JobListItem key={job.id} job={job} />\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Segment, Placeholder } from \"semantic-ui-react\";\r\n\r\nexport default function JobListItemPlaceholder() {\r\n  return (\r\n    <Placeholder fluid>\r\n      <Segment.Group>\r\n        <Segment>\r\n          <Placeholder>\r\n            <Placeholder.Header image>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder.Header>\r\n            <Placeholder.Paragraph>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder.Paragraph>\r\n          </Placeholder>\r\n        </Segment>\r\n        <Segment>\r\n          <Placeholder.Line />\r\n          <Placeholder.Line />\r\n        </Segment>\r\n      </Segment.Group>\r\n    </Placeholder>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Dropdown, DropdownProps } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function JobSort() {\r\n  const {\r\n    jobStore: { sortJobsBy, changeSorting },\r\n  } = useStore();\r\n\r\n  function handleSortChange(\r\n    e: React.SyntheticEvent<HTMLElement, Event>,\r\n    props: DropdownProps\r\n  ) {\r\n    if (props.value) changeSorting(props.value.toString());\r\n  }\r\n\r\n  return (\r\n    <Dropdown\r\n      direction=\"left\"\r\n      selection\r\n      className=\"listSort-dropdown\"\r\n      style={{ float: \"right\" }}\r\n      options={[\r\n        { key: 1, text: \"Date: oldest\", value: \"dateOldest\" },\r\n        {\r\n          key: 2,\r\n          text: \"Date: newest\",\r\n          value: \"dateNewest\",\r\n        },\r\n      ]}\r\n      value={sortJobsBy}\r\n      onChange={handleSortChange}\r\n    />\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Header, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport JobFilters from \"./JobFilters\";\r\nimport JobList from \"./JobList\";\r\nimport JobListItemPlaceholder from \"./JobListItemPlaceholder\";\r\nimport JobSort from \"./JobSort\";\r\n\r\nexport default observer(function JobDashboard() {\r\n  const { jobStore } = useStore();\r\n  const {\r\n    loadJobs,\r\n    jobArray,\r\n    setPagingParams,\r\n    pagination,\r\n    loadingJobs,\r\n    resetState,\r\n    loadingSkills,\r\n  } = jobStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n  const [loadingInitial, setLoadingInitial] = useState(false);\r\n  let timerRef = useRef<ReturnType<typeof setTimeout>>();\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadJobs().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = \"Jobs - MatchIT\";\r\n    resetState();\r\n  }, [resetState]);\r\n\r\n  useEffect(() => {\r\n    if (jobArray.length === 0 && !loadingJobs && (!loadingInitial || loadingSkills)) {\r\n      loadJobs();\r\n      setLoadingInitial(true);\r\n    } else if (jobArray.length === 0 && !loadingJobs && loadingInitial) {\r\n      timerRef.current = setTimeout(() => {\r\n        loadJobs();\r\n      }, 10000);\r\n    } else {\r\n      clearTimeout(timerRef.current!);\r\n    }\r\n    return () => {\r\n      clearTimeout(timerRef.current!);\r\n    };\r\n  }, [jobArray.length, loadJobs, loadingInitial, loadingJobs, loadingSkills]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"6\">\r\n        <Grid.Row style={{ marginBottom: \"50px\" }}>\r\n          <JobSort />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <JobFilters />\r\n        </Grid.Row>\r\n      </Grid.Column>\r\n      <Grid.Column width=\"10\">\r\n        {loadingJobs && !loadingNext ? (\r\n          <>\r\n            <JobListItemPlaceholder />\r\n            <JobListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={\r\n              !loadingNext &&\r\n              !!pagination &&\r\n              pagination.currentPage < pagination.totalPages\r\n            }\r\n            initialLoad={false}\r\n          >\r\n            {loadingInitial && jobArray.length > 0 ? (\r\n              <JobList jobArray={jobArray} />\r\n            ) : (\r\n              <Header content=\"There are no jobs yet\" icon=\"list\" />\r\n            )}\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"10\" style={{minHeight: '300px'}}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Confirm } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  jobId: string;\r\n}\r\n\r\nexport default observer(function DeleteJobButton({ jobId }: Props) {\r\n  const {\r\n    jobStore: { loading, deleteJob },\r\n  } = useStore();\r\n  const [hoverDeleteButton, setHoverDeleteButton] = useState(false);\r\n  const [openConfirmModal, setOpenConfirmModal] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n  return (\r\n    <>\r\n      <Button\r\n        icon=\"trash\"\r\n        className={`jobListItem-deleteButton ${hoverDeleteButton ? \"red\" : \"\"}`}\r\n        basic\r\n        onMouseEnter={() => setHoverDeleteButton(true)}\r\n        onMouseLeave={() => setHoverDeleteButton(false)}\r\n        onClick={(e) => {\r\n          setOpenConfirmModal(true);\r\n          setTarget(e.currentTarget.name);\r\n        }}\r\n        loading={loading && target === `button${jobId}`}\r\n        name={`button${jobId}`}\r\n      />\r\n      <Confirm\r\n        className=\"jobListItem-confirmDeleteModal\"\r\n        header=\"Delete job offer\"\r\n        open={openConfirmModal}\r\n        onCancel={() => setOpenConfirmModal(false)}\r\n        onConfirm={() => {\r\n          deleteJob(jobId);\r\n          setOpenConfirmModal(false);\r\n        }}\r\n        size=\"mini\"\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Card, Image, Segment } from \"semantic-ui-react\";\r\nimport { UserFile } from \"../../../app/models/profile\";\r\nimport { Document, Page } from \"react-pdf/dist/umd/entry.webpack\";\r\nimport \"react-pdf/dist/umd/Page/AnnotationLayer.css\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\ninterface Props {\r\n  attachments: UserFile[];\r\n}\r\n\r\nexport default observer(function JobAttachmentsSegment({ attachments }: Props) {\r\n  const {\r\n    fileStore: { openFilePreviewModal },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Segment>\r\n      <Card style={{ width: \"100%\" }} raised>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"space-around\",\r\n            padding: \"10px\",\r\n          }}\r\n        >\r\n          {attachments.map((file) => (\r\n            <div key={file.id} className=\"file-thumbnail-container\">\r\n              <Card className=\"file-thumbnail-card\">\r\n                {file.url.startsWith(\"blob\") ? (\r\n                  <>\r\n                    {file.resourceType.includes(\"image\") ? (\r\n                      <Image\r\n                        src={file.url}\r\n                        size={\"small\"}\r\n                        style={{ display: \"inline-block\" }}\r\n                      />\r\n                    ) : (\r\n                      <Document file={file.url}>\r\n                        <Page pageNumber={1} width={150} />\r\n                      </Document>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <Image\r\n                    src={\r\n                      file.url.endsWith(\".pdf\")\r\n                        ? file.url.replace(new RegExp(\".pdf$\"), \".png\")\r\n                        : file.url\r\n                    }\r\n                    size={\"small\"}\r\n                    style={{ display: \"inline-block\" }}\r\n                  />\r\n                )}\r\n                <div\r\n                  className=\"overlay asAButton\"\r\n                  onClick={() => openFilePreviewModal(file)}\r\n                ></div>\r\n              </Card>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Card>\r\n    </Segment>\r\n  );\r\n});\r\n","import { useField } from \"formik\";\r\nimport _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  rows: number;\r\n  errorElementName: string;\r\n  label?: string;\r\n}\r\n\r\nexport default function ValidatedTextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea\r\n        {...field}\r\n        {..._.omit(props, \"errorElementName\")}\r\n        style={{ resize: \"none\" }}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error.includes(\"required field\")\r\n            ? `${props.errorElementName} is required`\r\n            : `${meta.error.replace(props.name, props.errorElementName)}`}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport * as Yup from \"yup\";\r\nimport FileAddWidget from \"../../../../app/common/fileUpload/add/FileAddWidget\";\r\nimport ValidatedTextArea from \"../../../../app/common/form/ValidatedTextArea\";\r\nimport ValidatedTextInput from \"../../../../app/common/form/ValidatedTextInput\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function JobBidForm({ setEditMode }: Props) {\r\n  const {\r\n    jobStore: { job, addJobBid },\r\n    fileStore: { temporaryFiles, resetState },\r\n  } = useStore();\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          jobBidDescription: \"\",\r\n          jobBidFee: 0,\r\n          error: null,\r\n        }}\r\n        onSubmit={(jobBidFormValues, { setErrors }) => {\r\n          if (job) {\r\n            try {\r\n              addJobBid(\r\n                jobBidFormValues,\r\n                Array.from(temporaryFiles.values())[0]\r\n              ).then(() => {\r\n                resetState();\r\n                setEditMode(false);\r\n              });\r\n            } catch (error: any) {\r\n              setErrors({ error });\r\n            }\r\n          }\r\n        }}\r\n        onReset={(values, { resetForm }) => resetForm()}\r\n        validationSchema={Yup.object({\r\n          jobBidDescription: Yup.string(),\r\n          jobBidFee: Yup.number().min(1).required(),\r\n        })}\r\n      >\r\n        {({ handleSubmit, isValid }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <ValidatedTextArea\r\n              name=\"jobBidDescription\"\r\n              placeholder=\"Job Bid Description\"\r\n              label=\"Job Bid Description\"\r\n              errorElementName=\"Job Bid Description\"\r\n              rows={3}\r\n            />\r\n            <ValidatedTextInput\r\n              type=\"number\"\r\n              name=\"jobBidFee\"\r\n              label=\"Job Bid Fee\"\r\n              placeholder=\"Job Bid Fee\"\r\n              errorElementName=\"Job Bid Fee\"\r\n            />\r\n            <Grid>\r\n              <Header content=\"Add CV\" />\r\n              <FileAddWidget maxFiles={1} />\r\n            </Grid>\r\n            <Button\r\n              content=\"Add\"\r\n              size=\"big\"\r\n              style={{ fontSize: \"1.35em\", marginTop: \"50px\" }}\r\n              type=\"submit\"\r\n              className=\"positive--custom\"\r\n              disabled={!isValid}\r\n            />\r\n            <Button\r\n            type=\"reset\"\r\n            content=\"Cancel\"\r\n              size=\"big\"\r\n              style={{ fontSize: \"1.35em\" }}\r\n              onClick={() => setEditMode(false)}\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Item, Segment } from \"semantic-ui-react\";\r\nimport ProfilePopup from \"../../../../app/common/profile/ProfilePopup\";\r\nimport { JobBid } from \"../../../../app/models/job\";\r\nimport { useStore } from \"../../../../app/stores/store\";\r\n\r\ninterface Props {\r\n  jobBid: JobBid;\r\n}\r\n\r\nexport default observer(function JobBidsSegmentItem({ jobBid }: Props) {\r\n  const {\r\n    jobStore: { deleteJobBid, acceptJobBid },\r\n  } = useStore();\r\n  return (\r\n    <Segment raised>\r\n      <Item>\r\n        <Item.Content>\r\n          <Item.Description content={jobBid.description} />\r\n          <Item.Meta content={jobBid.fee} />\r\n          <ProfilePopup profile={jobBid.bidder} />\r\n        </Item.Content>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            right: \"2%\",\r\n            transform: \"translateY(-50%)\",\r\n          }}\r\n        >\r\n          <Button\r\n            style={{ marginRight: \"15px\" }}\r\n            icon=\"checkmark\"\r\n            basic\r\n            color=\"green\"\r\n            size=\"massive\"\r\n            onClick={() => acceptJobBid(jobBid.id)}\r\n          />\r\n          <Button\r\n            icon=\"close\"\r\n            basic\r\n            color=\"red\"\r\n            size=\"massive\"\r\n            onClick={() => deleteJobBid(jobBid.id)}\r\n          />\r\n        </div>\r\n      </Item>\r\n    </Segment>\r\n  );\r\n});\r\n","import React, { Fragment } from \"react\";\r\nimport { Segment } from \"semantic-ui-react\";\r\nimport { JobBid } from \"../../../app/models/job\";\r\nimport JobBidsSegmentItem from \"./jobBid/JobBidSegmentItem\";\r\n\r\ninterface Props {\r\n  jobBids: JobBid[];\r\n}\r\n\r\nexport default function JobBidsSegment({ jobBids }: Props) {\r\n  return (\r\n    <Segment>\r\n      {jobBids.map((jobBid) => (\r\n        <Fragment key={jobBid.id}>\r\n          <JobBidsSegmentItem jobBid={jobBid} />\r\n        </Fragment>\r\n      ))}\r\n    </Segment>\r\n  );\r\n}\r\n","import { format } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { Item, Label, Segment } from \"semantic-ui-react\";\r\nimport ProfilePopup from \"../../../app/common/profile/ProfilePopup\";\r\nimport { Job } from \"../../../app/models/job\";\r\n\r\ninterface Props {\r\n    job: Job;\r\n}\r\n\r\nexport default function JobDetailsSegment({job}: Props) {\r\n    return (\r\n        <Segment>\r\n              <Item>\r\n                <Item.Content>\r\n                  <Item.Header\r\n                    as=\"h2\"\r\n                    style={{ marginBottom: \"0\", display: \"inline\" }}\r\n                    content={job.title}\r\n                  />\r\n                  <h4 style={{ display: \"inline\", marginLeft: \"5px\" }}> by </h4>\r\n                  <ProfilePopup profile={job.employer} />\r\n                  <Item.Meta></Item.Meta>\r\n                  <Item.Meta>{`Posted on: ${format(\r\n                    new Date(job.creationTime),\r\n                    \"dd-MM-yyyy\"\r\n                  )}`}</Item.Meta>\r\n                  <Item.Description>{job.description}</Item.Description>\r\n                  <Item.Extra>\r\n                    {job.requiredSkills.map((skill) => (\r\n                      <Label key={skill.id} content={skill.name} />\r\n                    ))}\r\n                  </Item.Extra>\r\n                </Item.Content>\r\n              </Item>\r\n            </Segment>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Grid, Header, Item, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport DeleteJobButton from \"../DeleteJobButton\";\r\nimport JobAttachmentsSegment from \"./JobAttachmentsSegment\";\r\nimport JobBidForm from \"./jobBid/JobBidForm\";\r\nimport JobBidsSegment from \"./JobBidsSegment\";\r\nimport JobDetailsSegment from \"./JobDetailsSegment\";\r\n\r\nexport default observer(function JobPage() {\r\n  const { id } = useParams<{ id: string }>();\r\n  const {\r\n    jobStore: { loadJob, loadingJob, job, resetState, isEmployer },\r\n    userStore: { user },\r\n  } = useStore();\r\n  const [addJobBidMode, setAddJobBidMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Job Details - MatchIT\";\r\n    resetState();\r\n    loadJob(id);\r\n  }, [loadJob, id, resetState]);\r\n\r\n  if (loadingJob) return <LoadingComponent content=\"Loading job details...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"16\">\r\n        {job && (\r\n          <Segment.Group>\r\n            <JobDetailsSegment job={job} />\r\n            {job.attachments.length > 0 && (\r\n              <JobAttachmentsSegment attachments={job.attachments} />\r\n            )}\r\n            {isEmployer && job.jobBids.length > 0 && (\r\n              <>\r\n                {job.acceptedJobBid ? (\r\n                  <Segment raised>\r\n                    <Item>\r\n                      <Item.Content>\r\n                        <Item.Description\r\n                          content={job.acceptedJobBid.description}\r\n                        />\r\n                        <Item.Meta content={job.acceptedJobBid.fee} />\r\n                        <Item.Header>\r\n                          {job.acceptedJobBid.bidder.userName}\r\n                        </Item.Header>\r\n                      </Item.Content>\r\n                    </Item>\r\n                  </Segment>\r\n                ) : (\r\n                  <JobBidsSegment jobBids={job.jobBids} />\r\n                )}\r\n              </>\r\n            )}\r\n            {isEmployer && <DeleteJobButton jobId={job.id} />}\r\n            {!isEmployer && (\r\n              <Segment>\r\n                {user?.isExpert ? (\r\n                  <>\r\n                    <Header content=\"Interested? Make an offer:\" />\r\n                    <Button\r\n                      content=\"Bid on the job\"\r\n                      onClick={() => setAddJobBidMode(true)}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Header content=\"Want to make an offer?\" />\r\n                    <Button\r\n                      content=\"Become an Expert\"\r\n                      as={Link}\r\n                      to=\"/becomeExpert\"\r\n                    />\r\n                  </>\r\n                )}\r\n              </Segment>\r\n            )}\r\n            {addJobBidMode && (\r\n              <Segment style={{ padding: \"20px 40px\" }}>\r\n                <JobBidForm setEditMode={setAddJobBidMode} />\r\n              </Segment>\r\n            )}\r\n          </Segment.Group>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import _ from \"lodash\";\r\nimport { runInAction } from \"mobx\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useCallback, useEffect, useReducer, useRef } from \"react\";\r\nimport { Search, SearchResultData } from \"semantic-ui-react\";\r\nimport { searchReducer } from \"../../../app/common/util/hooks\";\r\nimport { SkillSearchItem, State } from \"../../../app/models/search\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\ninterface Props {\r\n  source: SkillSearchItem[];\r\n  loadingSkills: boolean;\r\n  setRemovedSkill: (removedSkill: boolean) => void;\r\n}\r\n\r\nexport default observer(function JobSkillSearchInput({\r\n  source,\r\n  loadingSkills,\r\n  setRemovedSkill,\r\n}: Props) {\r\n  const {\r\n    jobStore: {\r\n      addRequiredSkill,\r\n      removeRequiredSkill,\r\n      requiredSkills,\r\n      skillRegistry,\r\n    },\r\n  } = useStore();\r\n  const initialState: State = {\r\n    loading: true,\r\n    results: [],\r\n    value: \"\",\r\n  };\r\n  const [state, searchDispatch] = useReducer(searchReducer, initialState);\r\n  const { loading, results, value } = state;\r\n\r\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\r\n\r\n  useEffect(() => {\r\n    searchDispatch({ type: \"FINISH_SEARCH\", results: source });\r\n  }, [source, source.length]);\r\n\r\n  const handleSearchChange = useCallback(\r\n    (e, data) => {\r\n      clearTimeout(timeoutRef.current!);\r\n      searchDispatch({ type: \"START_SEARCH\", query: data.value });\r\n\r\n      timeoutRef.current = setTimeout(() => {\r\n        if (data.value.length === 0) {\r\n          searchDispatch({ type: \"FINISH_SEARCH\", results: source });\r\n        }\r\n\r\n        const re = new RegExp(_.escapeRegExp(data.value), \"i\");\r\n        const isMatch = (result: SkillSearchItem) => re.test(result.title);\r\n\r\n        searchDispatch({\r\n          type: \"FINISH_SEARCH\",\r\n          results: _.filter(source, isMatch),\r\n        });\r\n      }, 100);\r\n    },\r\n    [source]\r\n  );\r\n\r\n  const handleResultSelect = (e: any, data: SearchResultData) => {\r\n    searchDispatch({\r\n      type: \"UPDATE_SELECTION\",\r\n      selection: data.result.title,\r\n    });\r\n    const selectedSkill = Array.from(skillRegistry.values()).find(\r\n      (skill) => skill.name === data.result.title\r\n    );\r\n    if (selectedSkill)\r\n      if (requiredSkills.includes(selectedSkill)) {\r\n        removeRequiredSkill(selectedSkill);\r\n        runInAction(() => source.push(data.result));\r\n      } else {\r\n        addRequiredSkill(selectedSkill);\r\n        runInAction(() => source.splice(source.indexOf(data.result), 1));\r\n      }\r\n\r\n    searchDispatch({\r\n      type: \"CLEAN_QUERY\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Search\r\n      loading={loading || loadingSkills}\r\n      onResultSelect={(e, data) => handleResultSelect(e, data)}\r\n      onSearchChange={handleSearchChange}\r\n      onMouseDown={handleSearchChange}\r\n      results={results}\r\n      value={value}\r\n      minCharacters={0}\r\n      selectFirstResult\r\n      onBlur={() => setRemovedSkill(true)}\r\n    />\r\n  );\r\n});\r\n","import { runInAction } from \"mobx\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Header, Label, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport JobSkillSearchInput from \"./JobSkillSearchInput\";\r\n\r\ninterface Props {\r\n  setDisableButton: (disableButton: boolean) => void;\r\n}\r\n\r\nexport default observer(function RequiredJobSkills({\r\n  setDisableButton,\r\n}: Props) {\r\n  const {\r\n    jobStore: {\r\n      removeRequiredSkill,\r\n      loadAllSkills,\r\n      getSkillNames,\r\n      skillRegistry,\r\n      skillNames,\r\n      loadingSkills,\r\n      requiredSkills,\r\n    },\r\n  } = useStore();\r\n  const [removedSkill, setRemovedSkill] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setDisableButton(removedSkill && requiredSkills.length === 0);\r\n  }, [removedSkill, requiredSkills.length, setDisableButton]);\r\n\r\n  useEffect(() => {\r\n    loadAllSkills().then(getSkillNames);\r\n  }, [getSkillNames, loadAllSkills, skillNames]);\r\n\r\n  useEffect(() => {\r\n    if (skillRegistry.size < 1 && skillNames.length < 1)\r\n      loadAllSkills().then(getSkillNames);\r\n  }, [getSkillNames, loadAllSkills, skillNames.length, skillRegistry.size]);\r\n\r\n  useEffect(() => {\r\n    runInAction(() =>\r\n      skillNames.sort((s1, s2) => (s1.title >= s2.title ? 1 : -1))\r\n    );\r\n  }, [skillNames, skillNames.length]);\r\n\r\n  return (\r\n    <>\r\n      <Header>Required Skills</Header>\r\n      <Segment\r\n        style={{ marginBottom: \"3.5em\", minHeight: \"6em\" }}\r\n        className={\r\n          removedSkill && requiredSkills.length === 0\r\n            ? \"becomeExpert-skillsSegment__noSkills\"\r\n            : \"\"\r\n        }\r\n      >\r\n        {requiredSkills &&\r\n          requiredSkills.map((skill) => (\r\n            <Label\r\n              className=\"becomeExpert--skillLabel__hover asAButton\"\r\n              onClick={() => {\r\n                removeRequiredSkill(skill);\r\n                setRemovedSkill(true);\r\n              }}\r\n              key={skill.id}\r\n            >\r\n              {skill.name}\r\n            </Label>\r\n          ))}\r\n        {removedSkill && requiredSkills.length === 0 && (\r\n          <Label\r\n            style={{ position: \"absolute\", zIndex: 2, top: \"110%\", left: \"0\" }}\r\n            content=\"You must select at least one skill\"\r\n            basic\r\n            color=\"red\"\r\n          />\r\n        )}\r\n      </Segment>\r\n      <JobSkillSearchInput\r\n        source={skillNames}\r\n        loadingSkills={loadingSkills}\r\n        setRemovedSkill={setRemovedSkill}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import { Form, Formik } from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport ValidatedTextInput from \"../../../app/common/form/ValidatedTextInput\";\r\nimport ValidatedTextArea from \"../../../app/common/form/ValidatedTextArea\";\r\nimport FileAddWidget from \"../../../app/common/fileUpload/add/FileAddWidget\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport RequiredJobSkills from \"./RequiredJobSkills\";\r\n\r\nexport default observer(function AddJob() {\r\n  const {\r\n    jobStore: {\r\n      addJob,\r\n      job,\r\n      resetJob,\r\n      requiredSkills,\r\n      resetRequiredSkills,\r\n      loading,\r\n    },\r\n    fileStore: { temporaryFiles, resetState },\r\n  } = useStore();\r\n\r\n  const [disableButton, setDisableButton] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Add New Job Offer - MatchIT\";\r\n    if (job !== null) resetJob();\r\n  }, [job, resetJob]);\r\n\r\n  useEffect(() => {\r\n    resetRequiredSkills();\r\n  }, [resetRequiredSkills]);\r\n\r\n  useEffect(() => {\r\n    if (requiredSkills.length === 0) setDisableButton(true);\r\n    else setDisableButton(false);\r\n  }, [requiredSkills.length]);\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          jobTitle: \"\",\r\n          jobDescription: \"\",\r\n          error: null,\r\n        }}\r\n        onSubmit={(jobFormValues, { setErrors }) => {\r\n          try {\r\n            addJob(jobFormValues, temporaryFiles).then(resetState);\r\n          } catch (error: any) {\r\n            setErrors({ error });\r\n          }\r\n        }}\r\n        validationSchema={Yup.object({\r\n          jobTitle: Yup.string().required(),\r\n          jobDescription: Yup.string().required(),\r\n        })}\r\n      >\r\n        {({ handleSubmit, isValid }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <Segment style={{ padding: \"20px 40px\" }}>\r\n              <Grid>\r\n                <Grid.Column width=\"16\">\r\n                  <ValidatedTextInput\r\n                    name=\"jobTitle\"\r\n                    placeholder=\"Job Title\"\r\n                    label=\"Job Title\"\r\n                    errorElementName=\"Job Title\"\r\n                  />\r\n                  <ValidatedTextArea\r\n                    name=\"jobDescription\"\r\n                    placeholder=\"Job Description\"\r\n                    label=\"Job Description\"\r\n                    errorElementName=\"Job Description\"\r\n                    rows={3}\r\n                  />\r\n                  <RequiredJobSkills setDisableButton={setDisableButton} />\r\n                </Grid.Column>\r\n              </Grid>\r\n              <Grid>\r\n                <FileAddWidget />\r\n              </Grid>\r\n              <Button\r\n                content=\"Add\"\r\n                size=\"big\"\r\n                style={{ fontSize: \"1.35em\", marginTop: \"50px\" }}\r\n                type=\"submit\"\r\n                className=\"positive--custom\"\r\n                disabled={disableButton || !isValid}\r\n                loading={loading}\r\n              />\r\n            </Segment>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Item, Segment } from \"semantic-ui-react\";\r\nimport ProfilePopup from \"../../../app/common/profile/ProfilePopup\";\r\nimport { Job } from \"../../../app/models/job\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport DeleteJobButton from \"../DeleteJobButton\";\r\n\r\ninterface Props {\r\n  job: Job;\r\n}\r\n\r\nexport default observer(function JobListItem({ job }: Props) {\r\n  const {\r\n    jobStore: { setSkillPredicate, skillPredicate},\r\n    userStore: { user },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/jobs/${job.id}`}>\r\n                {job.title}\r\n              </Item.Header>\r\n              <Item.Meta>\r\n                <ProfilePopup profile={job.employer} />\r\n              </Item.Meta>\r\n              <Item.Meta>\r\n                {`Posted on: ${format(\r\n                  new Date(job.creationTime),\r\n                  \"dd-MM-yyyy\"\r\n                )}`}\r\n              </Item.Meta>\r\n              <Item.Description>{job.description}</Item.Description>\r\n            </Item.Content>\r\n            {job.employer.userName === user?.userName && (\r\n              <DeleteJobButton jobId={job.id} />\r\n            )}\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        {job.requiredSkills.map((skill) => (\r\n          <Button\r\n            className=\"skillList-skillButton\"\r\n            as={Link}\r\n            to={`/jobs`}\r\n            key={skill.id}\r\n            content={skill.name}\r\n            disabled={Array.from(skillPredicate.values())[0]\r\n              .split(\",\")\r\n              .includes(skill.name)}\r\n            onClick={() => {\r\n              setSkillPredicate(skill.name);\r\n            }}\r\n          />\r\n        ))}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Job } from \"../../../app/models/job\";\r\nimport UserJobListItem from \"./UserJobListItem\";\r\n\r\ninterface Props {\r\n  jobArray: Job[];\r\n}\r\n\r\nexport default observer(function JobList({jobArray}:Props) {\r\n  return (\r\n    <>\r\n      {jobArray.map((job) => (\r\n        <UserJobListItem key={job.id} job={job} />\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Grid, Header, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport JobListItemPlaceholder from \"../dashboard/JobListItemPlaceholder\";\r\nimport UserJobList from \"./UserJobList\";\r\n\r\nexport default observer(function UserJobsPage() {\r\n  const {\r\n    jobStore: {\r\n      jobArray,\r\n      loadUserJobs,\r\n      setPagingParams,\r\n      pagination,\r\n      loadingJobs,\r\n      resetState,\r\n    },\r\n  } = useStore();\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n  const [loadingInitial, setLoadingInitial] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadUserJobs().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = \"My Jobs - MatchIT\";\r\n    resetState();\r\n  }, [resetState]);\r\n\r\n  useEffect(() => {\r\n    if (jobArray.length === 0 && !loadingJobs && !loadingInitial) {\r\n      loadUserJobs();\r\n      setLoadingInitial(true);\r\n    }\r\n  }, [jobArray.length, loadUserJobs, loadingInitial, loadingJobs]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"16\">\r\n        {loadingJobs && !loadingNext ? (\r\n          <>\r\n            <JobListItemPlaceholder />\r\n            <JobListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={\r\n              !loadingNext &&\r\n              !!pagination &&\r\n              pagination.currentPage < pagination.totalPages\r\n            }\r\n            initialLoad={false}\r\n          >\r\n            {loadingInitial && jobArray.length > 0 ? (\r\n              <UserJobList jobArray={jobArray} />\r\n            ) : (\r\n              <>\r\n                <Header content=\"You have no jobs yet\" />\r\n                <Button as={Link} to=\"/addJob\" content=\"Add New Job Offer\" />\r\n              </>\r\n            )}\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"10\">\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport ModalContainer from \"../common/modals/ModalContainer\";\r\nimport NavBar from \"./NavBar\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport TestErrors from \"../../features/errors/TestErrors\";\r\nimport ServerError from \"../../features/errors/ServerError\";\r\nimport RegisterSuccess from \"../../features/users/RegisterSuccess\";\r\nimport ConfirmEmail from \"../../features/users/ConfirmEmail\";\r\nimport NotFound from \"../../features/errors/NotFound\";\r\nimport ExpertDashboard from \"../../features/experts/dashboard/ExpertDashboard\";\r\nimport ProfilePage from \"../../features/profiles/profilePage/ProfilePage\";\r\nimport BecomeExpert from \"../../features/profiles/becomeExpertForm/BecomeExpert\";\r\nimport FilePreviewModal from \"../common/fileUpload/FilePreviewModal\";\r\nimport JobDashboard from \"../../features/jobs/dashboard/JobDashboard\";\r\nimport JobPage from \"../../features/jobs/jobPage/JobPage\";\r\nimport AddJob from \"../../features/jobs/addJob/AddJob\";\r\nimport UserJobList from \"../../features/jobs/userJobList/UserJobsPage\";\r\n\r\nfunction App() {\r\n  const { commonStore, userStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (commonStore.token) {\r\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\r\n    } else {\r\n      commonStore.setAppLoaded();\r\n    }\r\n  }, [commonStore, userStore]);\r\n\r\n  if (!commonStore.appLoaded)\r\n    return <LoadingComponent content=\"Loading app...\" />;\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position=\"bottom-left\" hideProgressBar />\r\n      <ModalContainer />\r\n      <FilePreviewModal />\r\n      {/* <Route exact path=\"/\" component={HomePage} /> */}\r\n      <Route\r\n        path={\"/\"}\r\n        render={() => (\r\n          <>\r\n            <NavBar />\r\n            <Container style={{ marginTop: \"7em\", marginBottom: '7em' }}>\r\n              <Switch>\r\n                <Route exact path=\"/\" component={ExpertDashboard} />\r\n                <Route exact path=\"/jobs\" component={JobDashboard} />\r\n                <Route exact path=\"/jobs/:id\" component={JobPage} />\r\n                <Route path=\"/profiles/:userName\" component={ProfilePage} />\r\n                <PrivateRoute path=\"/becomeExpert\" component={BecomeExpert} />\r\n                <PrivateRoute path=\"/addJob\" component={AddJob} />\r\n                <PrivateRoute path=\"/jobs/:userName\" component={UserJobList} />\r\n                <Route path=\"/errors\" component={TestErrors} />\r\n                <Route path=\"/server-error\" component={ServerError} />\r\n                <Route\r\n                  path=\"/account/registerSuccess\"\r\n                  component={RegisterSuccess}\r\n                />\r\n                <Route path=\"/account/verifyEmail\" component={ConfirmEmail} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'cropperjs/dist/cropper.css';\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { createBrowserHistory } from \"history\";\nimport { Router } from \"react-router\";\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}